[
  {
    "mondaibun": "プロジェクトで作成するWBSに関する記述のうち，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "WBSではプロジェクトで実施すべき作業内容と成果物を定義するので，作業工数を見積もるときの根拠として使用できる。",
      "WBSには，プロジェクトのスコープ外の作業も検討して含める。",
      "全てのプロジェクトにおいて，WBSは成果物と作業内容を同じ階層まで詳細化する。",
      "プロジェクトの担当者がスコープ内の類似作業を実施する場合，WBSにはそれらの作業を記載しなくてよい。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>WBS</strong>(Work Breakdown Structure)は、プロジェクト目標を達成し、必要な成果物を過不足なく作成するために、プロジェクトチームが実行すべき作業を、成果物を主体に階層的に要素分解したものです。各作業ごとに内容・スケジュール・目標を設定することでプロジェクト管理をしやすくする目的で用いられます。<div class=\"img_margin\"><img alt=\"36.png/image-size:409×327\" height=\"327\" src=\"https://www.itpassportsiken.com/kakomon/04_haru/img/36.png\" width=\"409\"/></div><ul><li class=\"lia\"><span class=\"cite\">WBSではプロジェクトで実施すべき作業内容と成果物を定義するので，作業工数を見積もるときの根拠として使用できる。</span><br><em class=\"m\">正しい</em>。WBSでは成果物や作業が細かく定義されるので、それぞれの作業工数やスケジュールの予測を立てやすくなります。分割した成果物や作業ごとに作業工数を割り当て、それを積み上げて全体の作業工数を見積もる手法があります。</li><li class=\"lii\"><span class=\"cite\">WBSには，プロジェクトのスコープ外の作業も検討して含める。</span><br>スコープとはプロジェクトの実施範囲です。プロジェクトで実施しない作業はWBSに記述しません。</li><li class=\"liu\"><span class=\"cite\">全てのプロジェクトにおいて，WBSは成果物と作業内容を同じ階層まで詳細化する。</span><br>プロジェクト、工程および成果物によって、どの階層まで詳細化すべきかは異なります。</li><li class=\"lie\"><span class=\"cite\">プロジェクトの担当者がスコープ内の類似作業を実施する場合，WBSにはそれらの作業を記載しなくてよい。</span><br>WBSにはスコープ内の作業を過不足なく含めますから、他の作業の類似作業であっても記載しなければなりません。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "システムによる内部統制を目的として，幾つかの機能を実装した。次の処理は，どの機能の実現例として適切か。ログイン画面を表示して利用者IDとパスワードを入力する。利用者IDとパスワードの組合せがあらかじめ登録されている内容と一致する場合は業務メニュー画面に遷移する。一致しない場合は遷移せずにエラーメッセージを表示する。",
    "kouho": "[]",
    "mondai": [
      "システム障害の検知",
      "システムによるアクセス制御",
      "利用者に対するアクセス権の付与",
      "利用者のパスワード設定の妥当性の確認"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">設問の機能では、利用者IDとパスワードで認証を行い、正しい値が入力されたときにだけシステムの業務利用を許可にしています。利用者IDとパスワードの組による認証は、システムを利用しようとする人が正当な利用者であるかどうかを確認し、システムの不正な使用を防止するという意味合いがあります。このように、正当な利用者だけが情報資産に対してアクセスできるように管理することを「アクセス制御」と言います。<br><br>したがって「イ」が適切です。<ul><li class=\"lia\"><span class=\"cite\">システム障害の検知</span><br>利用者IDとパスワードによる認証では、システム障害を検知することはできません。</li><li class=\"lii\"><span class=\"cite\">システムによるアクセス制御</span><br><em class=\"m\">正しい</em>。</li><li class=\"liu\"><span class=\"cite\">利用者に対するアクセス権の付与</span><br>アクセス権の付与とは、人やグループごとに操作可能な範囲を限定することです。設問の機能は権限付与に関するものではないので誤りです。</li><li class=\"lie\"><span class=\"cite\">利用者のパスワード設定の妥当性の確認</span><br>パスワード設定の妥当性とは、パスワードが命名規則やガイドラインに当てはまっているかどうかのことです。設問の機能ではパスワード設定の妥当性を確認することはできません。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "内部統制"
    ]
  },
  {
    "mondaibun": "XP(エクストリームプログラミング)の説明として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "テストプログラムを先に作成し，そのテストに合格するようにコードを記述する開発手法のことである。",
      "一つのプログラムを2人のプログラマが，1台のコンピュータに向かって共同で開発する方法のことである。",
      "プログラムの振る舞いを変えずに，プログラムの内部構造を改善することである。",
      "要求の変化に対応した高品質のソフトウェアを短いサイクルでリリースする，アジャイル開発のアプローチの一つである。"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>エクストリームプログラミング</strong>(XP:eXtreme Programming)は、1990年代後半、ケント・ベック氏らによって提唱されたソフトウェア開発手法でアジャイルソフトウェア開発と称される一連の手法の先駆けとなったものです。「プログラマーは人間である」という思想のもと、叩き台となるプログラムを早期に開発し、短いサイクルで頻繁にテストとリリースを繰り返すことで、顧客の要求への対応力と生産性を高め、リスクを軽減することを目的としています。<br><br>XPでは、ソフトウェア開発に有益である要素を4つのカテゴリ、19のプラクティスとして定義しています。<div class=\"img_margin\"><img alt=\"38.png/image-size:377×332\" height=\"332\" src=\"https://www.itpassportsiken.com/kakomon/04_haru/img/38.png\" width=\"377\"/></div><ul><li class=\"lia\"><span class=\"cite\">テストプログラムを先に作成し，そのテストに合格するようにコードを記述する開発手法のことである。</span><br>プロダクトコードと並行してテストコードを書き、小まめに実行して結果を見ながら開発するというテストファーストで進めることをテスト駆動開発(TDD)といいます。テスト駆動開発は、XPのプラクティスの1つです。</li><li class=\"lii\"><span class=\"cite\">一つのプログラムを2人のプログラマが，1台のコンピュータに向かって共同で開発する方法のことである。</span><br>ペアプログラミングは、二人一組で実装を行い、一人が実際のコードをコンピュータに打ち込み、もう一人はそれをチェックしながら補佐するという役割を随時交代しながら作業を進めることです。ペアプログラミングは、XPのプラクティスの1つです。</li><li class=\"liu\"><span class=\"cite\">プログラムの振る舞いを変えずに，プログラムの内部構造を改善することである。</span><br>外部から見た時の振る舞いを変えずに、ソフトウェアの内部構造を改善することをリファクタリングといいます。リファクタリングは、XPのプラクティスの1つです。</li><li class=\"lie\"><span class=\"cite\">要求の変化に対応した高品質のソフトウェアを短いサイクルでリリースする，アジャイル開発のアプローチの一つである。</span><br><em class=\"m\">正しい</em>。XP(エクストリームプログラミング)は、アジャイル開発の方法論の一つです。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "提供するITサービスの価値を高めるためには，サービスの提供価格，どのようなことができるかというサービスの機能，及び可用性などを維持するサービスの保証の三つのバランスを考慮する必要がある。インスタントメッセンジャのサービスに関する記述のうち，サービスの保証に当たるものはどれか。",
    "kouho": "[]",
    "mondai": [
      "24時間365日利用可能である。",
      "ゲームなどの他のソフトウェアと連携可能である。",
      "無料で利用可能である。",
      "文字の代わりに自分で作成したアイコンも利用可能である。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">24時間365日利用可能である。</span><br><em class=\"m\">正しい</em>。可用性（利用者が必要な時にシステムを利用可能である特性）に関する記述ですので、サービスの保証に該当します。</li><li class=\"lii\"><span class=\"cite\">ゲームなどの他のソフトウェアと連携可能である。</span><br>機能（サービスにできること）に関する記述なので、サービスの機能に該当します。</li><li class=\"liu\"><span class=\"cite\">無料で利用可能である。</span><br>価格に関する記述なので、サービスの提供価格に該当します。</li><li class=\"lie\"><span class=\"cite\">文字の代わりに自分で作成したアイコンも利用可能である。</span><br>機能に関する記述なので、サービスの機能に該当します。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "ITガバナンスに関する記述として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "ITサービスマネジメントに関して，広く利用されているベストプラクティスを集めたもの",
      "システム及びソフトウェア開発とその取引の適正化に向けて，それらのベースとなる作業項目の一つ一つを定義して標準化したもの",
      "経営陣が組織の価値を高めるために実践する行動であり，情報システム戦略の策定及び実現に必要な組織能力のこと",
      "プロジェクトの要求事項を満足させるために，知識，スキル，ツール，技法をプロジェクト活動に適用すること"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ITガバナンス</strong>は、企業が競争優位性を構築するために、IT戦略の策定・実行をガイドし、あるべき方向へ導く組織能力であり、ITへの投資・効果・リスクを継続的に最適化するための組織的な仕組みです。ITを用いた企業統治という意味があります。経営目標を達成するためのIT戦略の策定、組織規模でのIT利活用の推進などがITガバナンスの活動に該当します。ITガバナンスの構築と推進は経営者の責務です。<br><br>したがって「ウ」が適切な記述です。<ul><li class=\"lia\"><span class=\"cite\">ITサービスマネジメントに関して，広く利用されているベストプラクティスを集めたもの</span><br>ITILに関する記述です。</li><li class=\"lii\"><span class=\"cite\">システム及びソフトウェア開発とその取引の適正化に向けて，それらのベースとなる作業項目の一つ一つを定義して標準化したもの</span><br>共通フレームに関する記述です。</li><li class=\"liu\"><span class=\"cite\">経営陣が組織の価値を高めるために実践する行動であり，情報システム戦略の策定及び実現に必要な組織能力のこと</span><br><em class=\"m\">正しい</em>。ITガバナンスに関する記述です。</li><li class=\"lie\"><span class=\"cite\">プロジェクトの要求事項を満足させるために，知識，スキル，ツール，技法をプロジェクト活動に適用すること</span><br>プロジェクトマネジメントに関する記述です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "内部統制"
    ]
  },
  {
    "mondaibun": "テレワークを推進しているある会社では，サテライトオフィスを構築している。サテライトオフィスで使用するネットワーク機器やPCを対象に，落雷による過電流を防止するための対策を検討した。有効な対策として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "グリーンITに対応した機器の設置",
      "サージ防護に対応した機器の設置",
      "無線LANルータの設置",
      "無停電電源装置の設置"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">施設の近くで落雷があると瞬間的に高い電圧（サージ）が発生し、この大きな電流が電話回線や電線を通じて施設内に侵入するとコンピュータが壊れてしまうおそれがあります。この過電流の被害から機器を守るため、OAタップなどに組み込まれている機能のことを「サージ防護」といいます。<br><br>したがって、落雷による過電流に有効な対策は「サージ防護に対応した機器の設置」となります。例としては、屋内配線の途中にサージ防護デバイスを設置するなどです。<ul><li class=\"lia\"><span class=\"cite\">グリーンITに対応した機器の設置</span><br>グリーンITは、省エネなど地球環境に優しいIT機器を利用することによって、環境保全を推進していくという考え方です。環境負荷の低減には有効ですが、過電流からの保護とは関係ありません。</li><li class=\"lii\"><span class=\"cite\">サージ防護に対応した機器の設置</span><br><em class=\"m\">正しい</em>。</li><li class=\"liu\"><span class=\"cite\">無線LANルータの設置</span><br>無線LANに接続するPCは被害を免れますが、電源や無線LANルータ等のネットワーク機器を守ることはできません。</li><li class=\"lie\"><span class=\"cite\">無停電電源装置の設置</span><br>停電対策としては有効ですが、過電流対策にはなりません。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "ファシリティマネジメント"
    ]
  },
  {
    "mondaibun": "システムの開発側と運用側がお互いに連携し合い，運用や本番移行を自動化する仕組みなどを積極的に取り入れ，新機能をリリースしてサービスの改善を行う取組を表す用語として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "DevOps",
      "RAD",
      "オブジェクト指向開発",
      "テスト駆動開発"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">DevOps</span><br><em class=\"m\">正しい</em>。DevOpsは、開発を意味する Development と運用を意味する Operations を組み合わせた造語で、開発担当チームと運用担当チームが緊密に協力・連携し、自動化ツールなどを活用して柔軟かつスピーディに開発を進めるソフトウェア開発手法です。</li><li class=\"lii\"><span class=\"cite\">RAD</span><br>Rapid Application Developmentの略。統合開発環境によるプログラミングの半自動化や、視覚的な方法を用いたユーザーインタフェースの設計、モジュール開発などの機能を備える開発ツールを使い、短期間に目的プログラムを作成することを重視した開発スタイルです。</li><li class=\"liu\"><span class=\"cite\">オブジェクト指向開発</span><br>オブジェクト指向開発は、データとそのデータに対する操作を一つのまとまりとして管理し、そのまとまりを組み合わせてソフトウェアを開発する手法です。</li><li class=\"lie\"><span class=\"cite\">テスト駆動開発</span><br>テスト駆動開発は、プログラムを記述する前にその機能に合うテストケースを作成し、そのテストを通過するようにプログラムを実装するテストファーストの開発手法です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "図のアローダイアグラムにおいて，作業Bが2日遅れて完了した。そこで，予定どおりの期間で全ての作業を完了させるために，作業Dに要員を追加することにした。作業Dに当初20名が割り当てられているとき，作業Dに追加する要員は最少で何名必要か。ここで，要員の作業効率は一律である。",
    "kouho": "[]",
    "mondai": [
      "2",
      "3",
      "4",
      "5"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/04_haru/img/43.png"
    ],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">まず設問のアローダイアグラムにおけるクリティカルパスを考えます。<dl><dt>A→C→D</dt><dt></dt><dd>5＋5＋10＝20日</dd><dt>A→C→E→F</dt><dd>5＋5＋4＋4＝18日</dd><dt>B→D</dt><dd>10＋10＝20日</dd><dt>B→E→F</dt><dd>10＋4＋4＝18日</dd></dl>以上より、クリティカルパスは「A→C→D」および「B→D」、最短所要日数は20日となります。<br><br>作業Bが2日遅れたということは、作業Bの完了までに要した日数は12日ということになります。よって、工程全体を20日で完了するためには作業Dを8日で終えなくてはなりません。もともと20人で10日掛かっていた作業を8日で完了させるために必要な要員数は、以下のように求めることができます。<br><br>　10日×20人＝200人日<br>　200人日÷8日＝25人<br><br>作業Dに当初割り当てられていた要員数は20人なので、最少追加人数は「25－20＝5名」となります。<br><br>【別解】<br>10人で行っていた作業を8人で同日数で完成させるためには、<br><br>　8×n＝10<br>　n＝1.25<br><br>より、1日当たり1.25倍の作業をこなす必要があります。要員の作業効率は一律なので単純に従前より1.25倍の要員が必要となります。<br><br>　20人×1.25＝25人<br>　25人－20人＝5人</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ITサービスマネジメントにおけるインシデント管理の目的として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "インシデントの原因を分析し，根本的な原因を解決することによって，インシデントの再発を防止する。",
      "サービスに対する全ての変更を一元的に管理することによって，変更に伴う障害発生などのリスクを低減する。",
      "サービスを構成する全ての機器やソフトウェアに関する情報を最新，正確に維持管理する。",
      "インシデントによって中断しているサービスを可能な限り迅速に回復する。"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>インシデント管理</strong>は、サービスマネジメントを構成するプロセスの1つで、システムの異常終了や構成機器の障害発生などのようにサービスの中断やサービス品質の低下につながるような事象（インシデント）が発生した時に、サービスの中断時間を最小限に抑えて速やかに回復することを目指すプロセスです。<br><br>したがって「エ」が適切な記述です。<ul><li class=\"lia\"><span class=\"cite\">インシデントの原因を分析し，根本的な原因を解決することによって，インシデントの再発を防止する。</span><br>問題管理の目的です。問題管理は、インシデントや障害原因の把握と管理を行い、根本原因を究明して、回避策や恒久的な対策を策定するプロセスです。</li><li class=\"lii\"><span class=\"cite\">サービスに対する全ての変更を一元的に管理することによって，変更に伴う障害発生などのリスクを低減する。</span><br>変更管理の目的です。変更管理は、変更作業に伴うリスクを管理し、リスクとメリットを考慮してリリースを行うかどうかの評価を行うプロセスです。</li><li class=\"liu\"><span class=\"cite\">サービスを構成する全ての機器やソフトウェアに関する情報を最新，正確に維持管理する。</span><br>構成管理の目的です。構成管理は、ITサービスを構成する全てのIT資産を明確化し、これらのIT資産情報の情報を構成管理データベース（CMDB)に記録し、その維持管理を行うとともに、他のプロセスの活動が円滑に進むように構成情報の提供を行うプロセスです。</li><li class=\"lie\"><span class=\"cite\">インシデントによって中断しているサービスを可能な限り迅速に回復する。</span><br><em class=\"m\">正しい</em>。インシデント管理の目的です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "ブラックボックステストに関する記述として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "プログラムの全ての分岐についてテストする。",
      "プログラムの全ての命令についてテストする。",
      "プログラムの内部構造に基づいてテストする。",
      "プログラムの入力と出力に着目してテストする。"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ブラックボックステスト</strong>は、システムへの入力とそれに対して得られる出力だけに着目して、様々な入力に対して仕様書どおりの出力が得られるかどうかを検証していくテストで、主にシステムテストや運用テストにおいて用いられます。具体的な手法としては、同値分割、限界値分析、原因-結果グラフ、エラー推測などの手法があります。システムの内部構造を考慮しない（隠された）状態で検証を行うので「ブラックボックステスト」と呼ばれます。<br><br>したがって、入力に対する出力が正しいかどうかをテストする「エ」がブラックボックステストに当たります。<br><br>その他は、プログラムの詳細設計書などを見ながら、プログラムの内部構造が正しいかどうかを検証することになるので「ホワイトボックステスト」に該当します。</div>",
    "category": [
      "マネジメント系",
      "システム開発技術",
      "システム開発技術"
    ]
  },
  {
    "mondaibun": "a～dのうち，ファシリティマネジメントに関する実施事項として，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,コンピュータを設置した建物への入退館の管理適切。建物に関する管理なので、ファシリティマネジメントの活動です。', 'b,社内のPCへのマルウェア対策ソフトの導入と更新管理不適切。情報セキュリティマネジメントの施策です。一般的に個々のPCの管理はファシリティマネジメントに含まれません。', 'c,情報システムを構成するソフトウェアのライセンス管理不適切。IT資産管理の施策です。管理対象が物的な資産ではないので、ファシリティマネジメントではありません。', 'd,停電時のデータ消失防止のための無停電電源装置の設置適切。システム基盤となる設備を保護するための施策なので、ファシリティマネジメントの活動です。']",
    "mondai": [
      "a，c",
      "a，d",
      "b，d",
      "c，d"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ファシリティマネジメント</strong>は、企業・団体が保有または使用する全施設資産とそれらの利用環境を経営戦略的視点から総合的かつ統括的に企画、管理、活用する経営活動です（参考：日本ファシリティマネジメント協会）。システム環境の基盤となる土地、建物、構築物、設備などの物的な資産や物理的空間が最適な状態であるように管理することを目的とします。具体的には、コンピュータシステムやネットワーク施設基盤が快適であること、安全性が確保されていること、運用費用が少ないこと、最大限効果的に活用されていることなどを目指します。<br><ol type=\"a\"><li><span class=\"cite\">コンピュータを設置した建物への入退館の管理</span><br>適切。建物に関する管理なので、ファシリティマネジメントの活動です。</li><li><span class=\"cite\">社内のPCへのマルウェア対策ソフトの導入と更新管理</span><br>不適切。情報セキュリティマネジメントの施策です。一般的に個々のPCの管理はファシリティマネジメントに含まれません。</li><li><span class=\"cite\">情報システムを構成するソフトウェアのライセンス管理</span><br>不適切。IT資産管理の施策です。管理対象が物的な資産ではないので、ファシリティマネジメントではありません。</li><li><span class=\"cite\">停電時のデータ消失防止のための無停電電源装置の設置</span><br>適切。システム基盤となる設備を保護するための施策なので、ファシリティマネジメントの活動です。</li></ol>適切なものは「a，d」なので「イ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "ファシリティマネジメント"
    ]
  },
  {
    "mondaibun": "ソフトウェア保守に関する記述のうち，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "本番環境で運用中のシステムに対して，ソフトウェアの潜在不良を発見し，障害が発生する前に修正を行うことはソフトウェア保守には含まれない。",
      "本番環境で運用中のシステムに対して，ソフトウェアの不具合を修正することがソフトウェア保守であり，仕様変更に伴う修正はソフトウェア保守には含まれない。",
      "本番環境で運用中のシステムに対して，法律改正に伴うソフトウェア修正もソフトウェア保守に含まれる。",
      "本番環境で運用中のシステムに対する修正だけでなく，納入前のシステム開発期間中に実施した不具合の修正もソフトウェア保守に含まれる。"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ソフトウェア保守</strong>は、運用開始後のシステムやソフトウェアに対して変更や機能改善への対応、プログラムの欠陥（バグ）への対応、ビジネス環境の変化に応じたプログラムの修正作業などを実施することです。「運用開始後の」というのがポイントです。<br><br>ソフトウェア保守は、大きく分けて次の5つに大別されます。<dl><dt>是正保守</dt><dd>ソフトウェア製品の引渡し後に発見された問題を訂正するために行う受身の修正</dd><dt>予防保守</dt><dd>引渡し後のソフトウェア製品の潜在的な障害が運用障害になる前に発見し、是正を行うための修正</dd><dt>完全化保守</dt><dd>引渡し後のソフトウェア製品に機能の追加や変更、性能強化などの改良を行うための修正</dd><dt>適応保守</dt><dd>引渡し後、変化した又は変化している環境において、ソフトウェア製品を使用できるように保ち続けるために実施する修正</dd><dt>緊急保守</dt><dd>是正保守を行うまでシステムの運用を確保するための、計画外で一時的な修正</dd></dl><ul><li class=\"lia\"><span class=\"cite\">本番環境で運用中のシステムに対して，ソフトウェアの潜在不良を発見し，障害が発生する前に修正を行うことはソフトウェア保守には含まれない。</span><br>運用中のシステムに対する潜在的な不良の修正（予防保守）は、ソフトウェア保守に含まれます。</li><li class=\"lii\"><span class=\"cite\">本番環境で運用中のシステムに対して，ソフトウェアの不具合を修正することがソフトウェア保守であり，仕様変更に伴う修正はソフトウェア保守には含まれない。</span><br>運用中のシステムに対する機能変更や改良のための修正（完全化保守）は、ソフトウェア保守に含まれます。</li><li class=\"liu\"><span class=\"cite\">本番環境で運用中のシステムに対して，法律改正に伴うソフトウェア修正もソフトウェア保守に含まれる。</span><br><em class=\"m\">正しい</em>。法律改正やOSアップデート等のビジネス環境の変化に対応する修正（適応保守）は、ソフトウェア保守に含まれます。</li><li class=\"lie\"><span class=\"cite\">本番環境で運用中のシステムに対する修正だけでなく，納入前のシステム開発期間中に実施した不具合の修正もソフトウェア保守に含まれる。</span><br>開発期間中に行う修正は、ソフトウェア保守に含まれません。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム開発技術",
      "システム開発技術"
    ]
  },
  {
    "mondaibun": "システム開発プロジェクトの品質マネジメントにおいて，品質上の問題と原因との関連付けを行って根本原因を追究する方法の説明として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "管理限界を設定し，上限と下限を逸脱する事象から根本原因を推定する。",
      "原因の候補リストから原因に該当しないものを削除し，残った項目から根本原因を紋り込む。",
      "候補となる原因を魚の骨の形で整理し，根本原因を検討する。",
      "複数の原因を分類し，件数が多かった原因の順に対処すべき根本原因の優先度を決めていく。"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">管理限界を設定し，上限と下限を逸脱する事象から根本原因を推定する。</span><br>管理図に関する記述です。管理図は異常を検知するための方法なので、原因を特定することはできません。</li><li class=\"lii\"><span class=\"cite\">原因の候補リストから原因に該当しないものを削除し，残った項目から根本原因を紋り込む。</span><br>問題と原因との関連付けを行っていないので誤りです。ある原因が別の問題の原因にもなっていたり、ある問題が別の問題の原因になっていたりするため、根本原因を特定するには体系的に分析することが必要です。</li><li class=\"liu\"><span class=\"cite\">候補となる原因を魚の骨の形で整理し，根本原因を検討する。</span><br><em class=\"m\">正しい</em>。特性要因図に関する記述です。特性要因図は、結果とそれに影響を及ぼしたと思われる原因の関係を体系的に表す図で、直接的な原因と間接的な原因に分別したり、主要または根本原因を明確にしたりするために役に立ちます。</li><li class=\"lie\"><span class=\"cite\">複数の原因を分類し，件数が多かった原因の順に対処すべき根本原因の優先度を決めていく。</span><br>問題と原因の関連付けが行われていないので誤りです。また、件数の多かった原因が対処を優先すべき根本原因とは限りません。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ITサービスの利用者からの問合せに自動応答で対応するために，チャットボットを導入することにした。このようにチャットボットによる自動化が有効な管理プロセスとして，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "インシデント管理",
      "構成管理",
      "変更管理",
      "問題管理"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">ITサービスについて利用者からの問合せを一元的に受け付ける機能や部署のことを<strong>サービスデスク</strong>といいます。サービスデスクは様々な管理プロセスを支える機能ですが、特に関連の深い業務の一つとしてインシデント管理があります。サービスデスクでは、利用者からの問合せのうち、サービスの中断やサービス品質の低下につながる事象をインシデントとして扱い、記録し、対応し、解決までをフォローします。これらがインシデント管理の活動だからです。<br><br>つまり、チャットボットを導入すればサービスデスクの負担が軽減され、それが効率的なインシデント管理の活動につながるというわけです。したがって「ア」が適切となります。<ul><li class=\"lia\"><span class=\"cite\">インシデント管理</span><br><em class=\"m\">正しい</em>。インシデント管理は、チャットボットによる自動化が有効な管理プロセスです。</li><li class=\"lii\"><span class=\"cite\">構成管理</span><br>構成管理は、ITサービスを構成する全てのIT資産を明確化し、これらのIT資産情報の情報を構成管理データベース（CMDB）に記録し、その維持管理を行うとともに、他のプロセスの活動が円滑に進むように構成情報の提供を行うプロセスです。</li><li class=\"liu\"><span class=\"cite\">変更管理</span><br>変更管理は、変更作業に伴うリスクを管理し、リスクとメリットを考慮してリリースを行うかどうかの評価を行うプロセスです。</li><li class=\"lie\"><span class=\"cite\">問題管理</span><br>問題管理は、インシデントや障害原因の把握と管理を行い、根本原因を究明して、回避策や恒久的な対策を策定するプロセスです。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "120kステップのソフトウェアを開発した。開発の各工程における生産性の実績が表のとおりであるとき，開発全体の工数は何人月か。ここで，生産性は1人月当たりのkステップとする。",
    "kouho": "[]",
    "mondai": [
      "10",
      "12",
      "24",
      "50"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/04_haru/img/50.png"
    ],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">仮に10,000行のソースコードから成るソフトウェアを開発することを考えると、設計工程では10,000行分を設計し、製造工程では10,000行分のソースコードを打ち込むことになります。本問ではソフトウェアの規模が120kステップで、設計工程と製造工程のそれぞれで120kステップ分の作業を行うので、開発全体の工数は、設計工程に要する工数と製造工程に要する工数の合計となります。<br><br>開発規模、生産性、開発工数の間には「開発規模÷生産性＝開発工数」の関係があるので、この式を使って開発工数を求めます。<br><br>[設計工程]<br>開発規模120kステップのソフトウェアを6.0kステップ／人月の生産性で設計するので、開発工数は「120÷6.0＝20人月」。<br><br>[製造工程]<br>開発規模120kステップのソフトウェアを4.0kステップ／人月の生産性で製造するので、開発工数は「120÷4.0＝30人月」。<br><br>したがって開発全体の工数は「20人月＋30人月＝50人月」です。<br><br>※ステップ数はプログラムの行数、人月は1人が1カ月に行う作業量のことです。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ITサービスマネジメントにおけるSLAに関する次の記述において，a，bに当てはまる語句の組合せとして，適切なものはどれか。SLAは，aとbとの間で交わされる合意文書である。aが期待するサービスの目標値を定量化して合意した上でSLAに明記し，bはこれを測定・評価した上でサービスの品質を改善していく。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/04_haru/img/51.png"
    ],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>SLA</strong>(Service Level Agreement)は、サービス利用者とサービス提供者との間で、サービスの品質の内容について合意した文書のことです。SLAには、サービスの品目とその水準、水準が達成できなかった場合のペナルティなどが盛り込まれます。<br><br>SLAは、サービス利用者とサービス提供者との間で締結されるものなので、「顧客」と「サービスの供給者」の組合せが適切です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメント"
    ]
  },
  {
    "mondaibun": "A社がB社にシステム開発を発注し，システム開発プロジェクトを開始した。プロジェクトの関係者①～④のうち，プロジェクトのステークホルダとなるものだけを全て挙げたものはどれか。A社の経営者A社の利用部門B社のプロジェクトマネージャB社を技術支援する協力会社",
    "kouho": "[]",
    "mondai": [
      "①，②，④",
      "①，②，③，④",
      "②，③，④",
      "②，④"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ステークホルダ</strong>とは、プロジェクトメンバー、プロジェクトマネージャ、取引先、顧客、株主、経営者、地域などのように、プロジェクトの意思決定、活動、もしくは成果に影響を受ける可能性のあるすべての人やグループです。日本語では「利害関係者」といいます。ステークホルダには、組織の内外、直接的・間接的を問わず、そのプロジェクトが利益になる者、損害になる者の両方が含まれます。<br><br>①～④はすべてプロジェクトの関係者なので、プロジェクトのステークホルダとなります。したがって「イ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "a～dのうち，システム監査人が，合理的な評価・結論を得るために予備調査や本調査のときに利用する調査手段に関する記述として，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,EA(Enterprise Architecture)の活用不適切。EA(Enterprise Architecture)は、社会環境や情報技術の変化に素早く対応できるよう、全体最適の観点から業務とシステムを同時に改善していくためのフレームワークです。', 'b,コンピュータを利用した監査技法の活用適切。システム監査を支援する専用のソフトウェア等を利用したシステム監査です。システム監査基準において監査技法の一つとして記載されています。', 'c,資料や文書の閲覧適切。資料や文書の閲覧は、予備調査で必要な資料や情報を入手したり、本調査で監査証拠を入手したりするために行われます。', 'd,ヒアリング適切。ヒアリングとは、監査対象部門や関連部門にシステム監査人が質問し、回答を得る手法です。インタビューとも呼ばれます。予備調査でも本調査でも行われます。']",
    "mondai": [
      "a，b，c",
      "a，b，d",
      "a，c，d",
      "b，c，d"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">選択肢が3つの組合せなので、予備調査や本調査の手段ではない一つが分かれば正解することができます。<br><ol type=\"a\"><li><span class=\"cite\">EA(Enterprise Architecture)の活用</span><br>不適切。EA(Enterprise Architecture)は、社会環境や情報技術の変化に素早く対応できるよう、全体最適の観点から業務とシステムを同時に改善していくためのフレームワークです。</li><li><span class=\"cite\">コンピュータを利用した監査技法の活用</span><br>適切。システム監査を支援する専用のソフトウェア等を利用したシステム監査です。システム監査基準において監査技法の一つとして記載されています。</li><li><span class=\"cite\">資料や文書の閲覧</span><br>適切。資料や文書の閲覧は、予備調査で必要な資料や情報を入手したり、本調査で監査証拠を入手したりするために行われます。</li><li><span class=\"cite\">ヒアリング</span><br>適切。ヒアリングとは、監査対象部門や関連部門にシステム監査人が質問し、回答を得る手法です。インタビューとも呼ばれます。予備調査でも本調査でも行われます。</li></ol>適切なものは「b，c，d」なので「エ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "システム監査"
    ]
  },
  {
    "mondaibun": "顧客からの電話による問合せに対応しているサービスデスクが，次のようなオペレータ支援システムを導入した。このシステム導入で期待できる効果a～cのうち，適切なものだけを全て挙げたものはどれか。顧客とオペレータの会話をシステムが認識し，瞬時に知識データベースと照合，次に確認すべき事項や最適な回答の候補をオペレータのディスプレイに表示する。",
    "kouho": "['a,経験の浅いオペレータでも最適な回答候補を基に顧客対応することができるので，オペレータによる対応のばらつきを抑えることができる。適切。ディスプレイに表示された回答候補を見て対応をすることにより、経験の浅いオペレータでも一定レベルの顧客対応が可能となります。顧客対応が共通化されるので、オペレータによる対応のばらつきを減らす効果が望めます。', 'b,顧客の用件を自動的に把握して回答するので，電話による問合せに24時間対応することができる。不適切。本システムはオペレータの回答を支援することが目的であって、チャットボットのように自動で回答することはできません。', 'c,対応に必要な情報をオペレータが探す必要がなくなるので，個々の顧客対応時間を短縮することができる。適切。回答に必要となる情報が自動でディスプレイに表示されるので、速やかな対応が可能となり、結果として1人当たり顧客対応時間の削減につながります。']",
    "mondai": [
      "a，b",
      "a，b，c",
      "a，c",
      "b，c"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ol type=\"a\"><li><span class=\"cite\">経験の浅いオペレータでも最適な回答候補を基に顧客対応することができるので，オペレータによる対応のばらつきを抑えることができる。</span><br>適切。ディスプレイに表示された回答候補を見て対応をすることにより、経験の浅いオペレータでも一定レベルの顧客対応が可能となります。顧客対応が共通化されるので、オペレータによる対応のばらつきを減らす効果が望めます。</li><li><span class=\"cite\">顧客の用件を自動的に把握して回答するので，電話による問合せに24時間対応することができる。</span><br>不適切。本システムはオペレータの回答を支援することが目的であって、チャットボットのように自動で回答することはできません。</li><li><span class=\"cite\">対応に必要な情報をオペレータが探す必要がなくなるので，個々の顧客対応時間を短縮することができる。</span><br>適切。回答に必要となる情報が自動でディスプレイに表示されるので、速やかな対応が可能となり、結果として1人当たり顧客対応時間の削減につながります。</li></ol>適切なものは「a，c」なので「ウ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "サービスデスクの業務改善に関する記述のうち，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "サービスデスクが受け付けた問合せの内容や回答，費やした時間などを記録して分析を行う。",
      "障害の問合せに対して一時的な回避策は提示せず，根本原因及び解決策の検討に注力する体制を組む。",
      "利用者が問合せを速やかに実施できるように，問合せ窓口は問合せの種別ごとにできるだけ細かく分ける。",
      "利用者に対して公平性を保つように，問合せ内容の重要度にかかわらず受付順に回答を実施するように徹底する。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">サービスデスクが受け付けた問合せの内容や回答，費やした時間などを記録して分析を行う。</span><br><em class=\"m\">正しい</em>。受け付けた問合せの内容、受付時刻、回答内容、対処に要した時間などを適切に記録しておけば、問合せ対応の詳細を把握することができます。これにより、課題や改善点を見つけ出し、サービスデスク業務の改善につなげることができます。</li><li class=\"lii\"><span class=\"cite\">障害の問合せに対して一時的な回避策は提示せず，根本原因及び解決策の検討に注力する体制を組む。</span><br>根本原因や恒久的な解決策を検討するのは問題管理プロセスの役割です。サービスデスクは、問合せのあった問題について可能な限り迅速に通常のサービス状態に回復することを主な目標としますから、既知の回避策（ワークアラウンド）が特定されている場合、それを提示してサービスの迅速な回復を図るべきです。</li><li class=\"liu\"><span class=\"cite\">利用者が問合せを速やかに実施できるように，問合せ窓口は問合せの種別ごとにできるだけ細かく分ける。</span><br>問合せ窓口はひとつにすべきです。サービスデスクは、サービス利用者が抱える様々な問題を一元的に受け付ける「単一窓口（SPOC：Single Point of Contact）」であることが求められます。</li><li class=\"lie\"><span class=\"cite\">利用者に対して公平性を保つように，問合せ内容の重要度にかかわらず受付順に回答を実施するように徹底する。</span><br>サービスデスクが受け付けた問合せは、インパクトや緊急度に基づいて優先度をつけ、その優先度順に処理していくべきです。受付順に回答していくと、真に解決が必要な問合せが後回しにされてしまい、サービスに悪影響を与えるおそれがあります。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "システム監査人の行動規範に関して，次の記述中のa，bに入れる字句の適切な組合せはどれか。システム監査人は，監査対象となる組織と同一の指揮命令系統に属していないなど，a上の独立性が確保されている必要がある。また，システム監査人はb立場で公正な判断を行うという精神的な態度が求められる。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/05_haru/img/37.png"
    ],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">システム監査人は、システム監査を専門的な観点から公平かつ客観的に実施するために、監査対象から独立した立場であることが求められます。<br><br>システム監査人が備えるべき独立性には、「外観上の独立性」と「精神上の独立性」があります。<dl><dt>外観上の独立性</dt><dd>監査対象の領域または活動から、独立かつ客観的な立場で監査が実施されているという外観を有していなければならない</dd><dt>精神上の独立性</dt><dd>客観的な視点から公正な判断ができるように、判断をゆがめる可能性のある要因から影響を受けない精神状態でなければならない</dd></dl>〔<span class=\"bb\">a</span>について〕<br>監査人は、監査対象から独立した部門に所属するか、外部の監査事業者に所属するなど、<em class=\"r\">外観上</em>の独立性が確保された立場で監査を行う必要があります。監査対象と同じ指揮命令系統の属する者が監査を行った場合、少なからず利害関係を有することとなるため公平な監査とは言えないからです。<br><br>〔<span class=\"bb\">b</span>について〕<br>監査人は、監査の実施に当たり、<em class=\"r\">客観的</em>な視点から公正な判断を行わなければなりません。客観性が保持できない場合は、システム監査の品質及び信頼性を著しく損なうことになるからです。<br><br>したがって「ア」の組合せが正解です。</div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "システム監査"
    ]
  },
  {
    "mondaibun": "システム開発プロジェクトの品質目標を検討するために，複数の類似プロジェクトのプログラムステップ数と不良件数の関係性を示す図として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "管理図",
      "散布図",
      "特性要因図",
      "パレート図"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">プログラムステップ数と不良件数という2つの要素の関連性を可視化できる図であることが求められます。選択肢のうち、2項目間の分布・相関関係を把握するのに使用されるのは「散布図」しかありません。<br><br>したがって「イ」が正解です。<div class=\"img_margin\"><img alt=\"38.png/image-size:374×260\" height=\"260\" src=\"https://www.itpassportsiken.com/kakomon/05_haru/img/38.png\" width=\"374\"/></div><ul><li class=\"lia\"><span class=\"cite\">管理図</span><br>管理図は、中央線および上限と下限を示す限界線を引いて、製品などの特性値を打点することで、工程の状態や品質を時系列に表した図で、工程が安定した状態にあるかどうかを判断するために用います。</li><li class=\"lii\"><span class=\"cite\">散布図</span><br><em class=\"m\">正しい</em>。<strong>散布図</strong>は、縦軸・横軸に2項目の量や大きさ等を対応させて分析対象のデータを打点した図で、2種類のデータの関係性を表すために使用されます。</li><li class=\"liu\"><span class=\"cite\">特性要因図</span><br>特性要因図は、現れた特性（結果）とそれに影響を及ぼしたと思われる要因の関係を体系的に表わした図です。多くの要因が複雑に絡みあっているときに、直接的な原因と間接的な原因に分別したり、真の問題点を明らかにしたりすることができます。</li><li class=\"lie\"><span class=\"cite\">パレート図</span><br>パレート図は、値の大きい順に分析対象の項目を並べた棒グラフと、累積構成比を表す折れ線グラフを組み合わせた複合グラフで、主に複数の分析対象の中から重要である要素を識別するために使用します。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "運用中のソフトウェアの仕様書がないので，ソースコードを解析してプログラムの仕様書を作成した。この手法を何というか。",
    "kouho": "[]",
    "mondai": [
      "コードレビュー",
      "デザインレビュー",
      "リバースエンジニアリング",
      "リファクタリング"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">コードレビュー</span><br>コードレビューは、システム開発の実装段階において、開発者が書いたプログラムのソースコードを確認して問題点や改善点を発見するための活動です。バグやエラー、パフォーマンス上の問題、実装ミス、コーディング規約やプログラミング標準への準拠性などを審査します。</li><li class=\"lii\"><span class=\"cite\">デザインレビュー</span><br>デザインレビューは、システム開発の各設計段階において、設計仕様書やプロトタイプの内容を確認して問題点や改善点を発見するための活動です。システムに実装される機能、システム方式、インタフェース、UI、セキュリティなどが適切に設計されているかどうかを審査します。</li><li class=\"liu\"><span class=\"cite\">リバースエンジニアリング</span><br><em class=\"m\">正しい</em>。<strong>リバースエンジニアリング</strong>は、既存ソフトウェアの動作を解析するなどして、製品の構造を分析し、そこから製造方法や動作原理、設計図、ソースコードなどを調査する技法です。</li><li class=\"lie\"><span class=\"cite\">リファクタリング</span><br>リファクタリングは、外部から見たプログラムの動作を変えずに、ソースコードの内部構造を改良したり整理したりすることです。完成済のプログラムを改善し、高効率化や保守性の向上を図ることを目的として行われます。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "ソフトウェア開発におけるDevOpsに関する記述として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "運用側で利用する画面のイメージを明確にするために，開発側が要件定義段階でプロトタイプを作成する。",
      "開発側が，設計・開発・テストの工程を順に実施して，システムに必要な全ての機能及び品質を揃えてから運用側に引き渡す。",
      "開発側と運用側が密接に連携し，自動化ツールなどを取り入れることによって，仕様変更要求などに対して迅速かつ柔軟に対応する。",
      "一つのプログラムを2人の開発者が共同で開発することによって，生産性と信頼性を向上させる。"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>DevOps</strong>(デブオプス)は、開発を意味する Development と運用を意味する Operations を組み合わせた造語で、開発担当チームと運用担当チームが緊密に協力・連携し、自動化ツールなどを活用して柔軟かつスピーディに開発を進めるソフトウェア開発手法です。<br><br>自動でビルドとテストを行う「継続的インテグレーション」、常にリリース可能な状態を維持する「継続的デリバリ」、コードの変更を自動的に本番環境にリリースする「継続的デプロイメント」の3つのプラクティスを適用することにより、開発効率の向上、迅速なリリース、信頼性の向上、共同作業による文化の醸成などの効果が期待できます。<div class=\"img_margin\"><img alt=\"40.png/image-size:354×174\" height=\"174\" src=\"https://www.itpassportsiken.com/kakomon/05_haru/img/40.png\" width=\"354\"/></div><ul><li class=\"lia\"><span class=\"cite\">運用側で利用する画面のイメージを明確にするために，開発側が要件定義段階でプロトタイプを作成する。</span><br>プロトタイプ開発に関する記述です。</li><li class=\"lii\"><span class=\"cite\">開発側が，設計・開発・テストの工程を順に実施して，システムに必要な全ての機能及び品質を揃えてから運用側に引き渡す。</span><br>ウォーターフォール開発に関する記述です。</li><li class=\"liu\"><span class=\"cite\">開発側と運用側が密接に連携し，自動化ツールなどを取り入れることによって，仕様変更要求などに対して迅速かつ柔軟に対応する。</span><br><em class=\"m\">正しい</em>。\"開発側と運用側の連携\"・\"自動化ツール\"のキーワードより、DevOpsに関する記述であるとわかります。</li><li class=\"lie\"><span class=\"cite\">一つのプログラムを2人の開発者が共同で開発することによって，生産性と信頼性を向上させる。</span><br>ペアプログラミングに関する記述です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "次のアローダイアグラムに基づき作業を行った結果，作業Dが2日遅延し，作業Fが3日前倒しで完了した。作業全体の所要日数は予定と比べてどれくらい変化したか。",
    "kouho": "[]",
    "mondai": [
      "3日遅延",
      "1日前倒し",
      "2日前倒し",
      "3日前倒し"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/05_haru/img/41.png"
    ],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">当初予定の所要日数は、以下の3つのパスのうち所要期間が最も多くなるパスの日数です。<ul><li>A→C→F … 2＋4＋5＝<em class=\"r\">11</em>日</li><li>B→D→F … 3＋1＋5＝9日</li><li>B→E→G … 3＋1＋5＝9日</li></ul>当初は、11日間で作業全体が完了する予定だったことがわかります。<br><br>このスケジュールから作業Dが2日遅れ、作業Fが3日前倒しで完了すると、作業Dが「1＋2＝3日」、作業Fが「5－3＝2日」になるので、アローダイアグラムは次のように変化します。<div class=\"img_margin\"><img alt=\"41_1.png/image-size:338×178\" height=\"178\" src=\"https://www.itpassportsiken.com/kakomon/05_haru/img/41_1.png\" width=\"338\"/></div>変化後のアローダイアグラムでクリティカルパスを再計算すると、<ul><li>A→C→F … 2＋4＋<em class=\"r\">2</em>＝8日</li><li>B→D→F … 3＋<em class=\"r\">3</em>＋<em class=\"r\">2</em>＝8日</li><li>B→E→G … 3＋1＋5＝9日</li></ul>作業全体が終了するのは「B→E→G」が終了する9日目です。したがって、当初予定の所要日数11日と比較して「2日前倒し」となることがわかります。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ソフトウェア開発における，テストに関する記述a～cとテスト工程の適切な組合せはどれか。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/05_haru/img/42.png"
    ],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">システム・ソフトウェアの開発段階で実施される主なテストには、単体テスト、結合テスト、システムテストがあります。なお、システムの完成後には運用テストや導入テストもあります。<dl><dt>単体テスト</dt><dd>開発したプログラム単体が正しく動作するかどうかを検証するテスト</dd><dt>結合テスト</dt><dd>単体テストが終了したソフトウェア同士を組み合わせて、ソフトウェア間の接続部分(インタフェース)が適切に実装されているかを検証するテスト</dd><dt>システムテスト</dt><dd>開発したシステムが、システムとして定義された要件を備えているかどうかを検証するテスト</dd></dl>aは、システムが非機能要件を満たしているかどうかを確認しているので「システムテスト」、bは、ソフトウェア間のインタフェースを確認しているので「結合テスト」、cは、プログラム単体で内部構造の適切性を確認しているので「単体テスト」がそれぞれ該当します。<br><br>したがって「エ」の組合せが適切です。</div>",
    "category": [
      "マネジメント系",
      "システム開発技術",
      "システム開発技術"
    ]
  },
  {
    "mondaibun": "ソフトウェア導入作業に関する記述a～dのうち，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,新規開発の場合，導入計画書の作成はせず，期日までに速やかに導入する。不適切。ソフトウェア導入作業の実施に先立って、導入計画書を作成し、関係者からの合意を得ることが求められます。', 'b,ソフトウェア導入作業を実施した後，速やかに導入計画書と導入報告書を作成し，合意を得る必要がある。不適切。導入報告書の合意を得るのは作業実施後で構いませんが、導入計画書については作業実施前に関係者の合意を得る必要があります。', 'c,ソフトウェアを自社開発した場合，影響範囲が社内になるので導入計画書の作成後に導入し，導入計画書の合意は導入後に行う。不適切。導入計画を作成するのは導入作業に係るプロセスを低減する目的があるので、自社開発ソフトの導入だとしてもこれらを定めることは重要です。', 'd,本番稼働中のソフトウェアに機能追加する場合，機能追加したソフトウェアの導入計画書を作成し，合意を得てソフトウェア導入作業を実施する。適切。新規導入時だけでなく既存のソフトウェアに機能追加する場合でも、導入計画書を作成し、関係者の合意を得たうえで導入を実施する必要があります。']",
    "mondai": [
      "a，c",
      "b，c，d",
      "b，d",
      "d"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ソフトウェア導入</strong>は、開発されたシステム・ソフトウェアを実環境に導入するための計画を作成し、その導入計画に従い、利用者を支援しながらソフトウェアを実環境に導入するプロセスです。導入計画にはスケジュール、実施手順、必要な資源、並行運用の計画、失敗時の対処方法、利用者支援などが含まれます。<br><ol type=\"a\"><li><span class=\"cite\">新規開発の場合，導入計画書の作成はせず，期日までに速やかに導入する。</span><br>不適切。ソフトウェア導入作業の実施に先立って、導入計画書を作成し、関係者からの合意を得ることが求められます。</li><li><span class=\"cite\">ソフトウェア導入作業を実施した後，速やかに導入計画書と導入報告書を作成し，合意を得る必要がある。</span><br>不適切。導入報告書の合意を得るのは作業実施後で構いませんが、導入計画書については作業実施<u>前</u>に関係者の合意を得る必要があります。</li><li><span class=\"cite\">ソフトウェアを自社開発した場合，影響範囲が社内になるので導入計画書の作成後に導入し，導入計画書の合意は導入後に行う。</span><br>不適切。導入計画を作成するのは導入作業に係るプロセスを低減する目的があるので、自社開発ソフトの導入だとしてもこれらを定めることは重要です。</li><li><span class=\"cite\">本番稼働中のソフトウェアに機能追加する場合，機能追加したソフトウェアの導入計画書を作成し，合意を得てソフトウェア導入作業を実施する。</span><br>適切。新規導入時だけでなく既存のソフトウェアに機能追加する場合でも、導入計画書を作成し、関係者の合意を得たうえで導入を実施する必要があります。</li></ol>適切なものは「d」だけなので「エ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "システム開発技術",
      "システム開発技術"
    ]
  },
  {
    "mondaibun": "A社のIT部門では，ヘルプデスクのサービス可用性の向上を図るために，対応時間を24時間に拡大することを検討している。ヘルプデスク業務をA社から受託しているB社は，これを実現するためにチャットボットをB社に導入して活用することによって，深夜時間帯は自動応答で対応する旨を提案したところ，A社は24時間対応が可能であるのでこれに合意した。この合意に用いる文書として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "BCP",
      "NDA",
      "SLA",
      "SLM"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">BCP</span><br>Business Continuity Planの略で事業継続計画のことです。予期せぬ重大災害が発生した場合に、必要最低限の事業を継続しつつ、業務を早期に復旧・再開できるようにするための行動計画を指します。</li><li class=\"lii\"><span class=\"cite\">NDA</span><br>Non Disclosure Agreementの略で秘密保持契約のことです。営業秘密や個人情報などをやり取りする取引を行う場合に、その情報の開示の目的、範囲、管理方法、禁止事項などを明確にするために締結される契約を指します。守秘義務契約とも呼ばれます。</li><li class=\"liu\"><span class=\"cite\">SLA</span><br><em class=\"m\">正しい</em>。提供されるITサービスの水準についての合意であることから、SLAと判断できます。<br><strong>SLA</strong>(Service Level Agreement)でサービスレベル合意のことです。提供者と顧客の間でサービスの品質に関して結ぶ契約であり、サービスの品目と水準、および水準を達成できなかった場合のペナルティ事項などが盛り込まれます。</li><li class=\"lie\"><span class=\"cite\">SLM</span><br>Service Level Managementの略でサービスレベル管理のことです。SLAに基づいて顧客要件を満たすITサービスの提供を実現し、その品質の継続的な改善に必要なプロセスを構築するための管理活動です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメント"
    ]
  },
  {
    "mondaibun": "プロジェクトマネジメントでは，スケジュール，コスト，品質といった競合する制約条件のバランスをとることが求められる。計画していた開発スケジュールを短縮することになった場合の対応として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "資源の追加によってコストを増加させてでもスケジュールを遵守することを検討する。",
      "提供するシステムの高機能化を図ってスケジュールを遵守することを検討する。",
      "プロジェクトの対象スコープを拡大してスケジュールを遵守することを検討する。",
      "プロジェクトメンバーを削減してスケジュールを遵守することを検討する。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">プロジェクトは、対象範囲(スコープ)、納期(スケジュール)、予算(コスト)の3つの制約の上に成り立っていて、この3つは相互に関連しています。このバランス関係は「プロジェクト管理の三角形」と呼ばれ、どれか1つに変更があった場合には、他の2つの要素のうち少なくとも1つは変更しなくてはならないことを示します。<div class=\"img_margin\"><img alt=\"45.png/image-size:269×212\" height=\"212\" src=\"https://www.itpassportsiken.com/kakomon/05_haru/img/45.png\" width=\"269\"/></div>以下はその具体例です。<ul><li>スケジュールを短縮する ⇒ スコープを狭める or 投入する要員や機器を増やす</li><li>予算を縮小する ⇒ スコープを狭める or 実施する作業を少なくする</li><li>スコープを広げる ⇒ 予算を増やしてプロジェクト期間を延長する</li></ul>プロジェクトマネジメントでは、三要素のうち変更できない(優先順位の高い)要素を把握し、プロジェクトの進行状況を見ながら最終的な品質が最も高くなるように三要素を最適化していくことが求められます。<br><br>設問では、スケジュールの制約が厳しくなっていますから、プロジェクトを計画どおりに終わらせるためには、スコープの縮小または投入コストの増加が必要となります。したがって「ア」の対応が適切です。<ul><li class=\"lia\"><span class=\"cite\">資源の追加によってコストを増加させてでもスケジュールを遵守することを検討する。</span><br><em class=\"m\">正しい</em>。スケジュールの制約が厳しくなったことに対して、追加の資源を投入する、すなわちコストの制約を緩めることで対応しています。\"プロジェクト管理の三角形\"を踏まえた適切な対応です。</li><li class=\"lii\"><span class=\"cite\">提供するシステムの高機能化を図ってスケジュールを遵守することを検討する。</span><br>提供するシステムの高機能化（スコープの拡大）をすると、余計にスケジュールを順守することが難しくなります。</li><li class=\"liu\"><span class=\"cite\">プロジェクトの対象スコープを拡大してスケジュールを遵守することを検討する。</span><br>提供するシステムの高機能化（スコープの拡大）をすると、余計にスケジュールを順守することが難しくなります。</li><li class=\"lie\"><span class=\"cite\">プロジェクトメンバーを削減してスケジュールを遵守することを検討する。</span><br>投入する資源を少なくすると、余計にスケジュールを順守することが難しくなります。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ITサービスに関する指標には，ITサービスが利用できなくなるインシデントの発生間隔の平均時間であるMTBSI(Mean Time Between Service Incidents)があり，サービスの中断の発生しにくさを表す。ITサービスにおいてMTBSIの改善を行っている事例として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "インシデント対応事例のデータベースを整備し，分析することによって，サービスの中断から原因究明までの時間の短縮を図る。",
      "サービスのメニューを増やすことによって，利用者数の増加を図る。",
      "サービスを提供しているネットワークの構成を二重化することによって，ネットワークがつながらなくなる障害の低減を図る。",
      "ヘルプデスクの要員を増やすことによって，サービス利用者からの個々の問合せにおける待ち時間の短縮を図る。"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>MTBSI</strong>(Mean Time Between Service Incidents)は、システムの稼働率で登場するMTBF(平均故障間隔)のITサービス版で、システムまたはITサービスに障害が発生した時点から、次に障害が発生した時点までの平均時間のことです。ITサービスの信頼性の指標として使われます。<br><br>MTBSIは長いほど良いので、MTBSIを長くすることができる施策を選ぶことになります。<ul><li class=\"lia\"><span class=\"cite\">インシデント対応事例のデータベースを整備し，分析することによって，サービスの中断から原因究明までの時間の短縮を図る。</span><br>サービス中断からの回復時間(MTRS)ではなく、サービスが継続している時間(MTBSI)を長くしたいので誤りです。</li><li class=\"lii\"><span class=\"cite\">サービスのメニューを増やすことによって，利用者数の増加を図る。</span><br>サービスの構成アイテムが増えると、構成の複雑度が増し、その分だけ一定水準のサービスを提供し続けることは難しくなります。よって、MTBSIの短縮につながる要素と言えます。</li><li class=\"liu\"><span class=\"cite\">サービスを提供しているネットワークの構成を二重化することによって，ネットワークがつながらなくなる障害の低減を図る。</span><br><em class=\"m\">正しい</em>。ネットワーク障害によるサービス中断のリスクを低減することができるので、MTBSIの延長につながる要素と言えます。</li><li class=\"lie\"><span class=\"cite\">ヘルプデスクの要員を増やすことによって，サービス利用者からの個々の問合せにおける待ち時間の短縮を図る。</span><br>サービスデスクの品質指標である平均応答時間(ASA：Average Speed of Answer)の改善にはつながりますが、MTBSIの改善にはならないので誤りです。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメント"
    ]
  },
  {
    "mondaibun": "あるホスティングサービスのSLAの内容にa～cがある。これらと関連するITサービスマネジメントの管理との適切な組合せはどれか。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/05_haru/img/47.png"
    ],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">設問に上げられている3つのITサービスマネジメントの管理プロセスの目的は次のとおりです。<dl><dt>サービス可用性管理</dt><dd>合意したサービス継続と可用性について、合意した目標を達成することを確実にする</dd><dt>容量・能力管理</dt><dd>合意した現行または将来の容量・能力およびパフォーマンスの要求事項を満たすために、十分な容量・能力を提供することを確実にする</dd><dt>情報セキュリティ管理</dt><dd>情報資産を保護するためにセキュリティ管理策を設け、情報セキュリティがサービスの設計や移行に組み込まれることを確実にする</dd></dl>aは、稼働時間と可用性には密接な関係があるので「サービス可用性管理」、bは、サービス構成アイテムの容量に関することなので「容量・能力管理」、cは、情報セキュリティに関することなので「情報セキュリティ管理」がそれぞれ該当します。<br><br>したがって「ア」の組合せが適切です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "システム環境整備に関する次の記述中のa，bに入れる字句の適切な組合せはどれか。企業などがシステム環境である建物や設備などの資源を最善の状態に保つ考え方としてaがある。その考え方を踏まえたシステム環境整備の施策として，突発的な停電が発生したときにサーバに一定時間電力を供給する機器であるbの配備などがある。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "https://www.itpassportsiken.com/kakomon/05_haru/img/48.png"
    ],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">〔<span class=\"bb\">a</span>について〕<dl><dt>サービスレベルマネジメント(SLM)</dt><dd>合意された水準のサービスを提供するための管理活動</dd><dt>ファシリティマネジメント</dt><dd>組織が保有または使用する全施設資産、およびそれらの利用環境を経営戦略的視点から総合的かつ統括的に企画、管理、活用する管理手法</dd></dl>建物や設備を管理するための方法論なので、<em class=\"r\">ファシリティマネジメント</em>が当てはまります。<br><br>〔<span class=\"bb\">b</span>について〕<dl><dt>IPS（Intrusion Prevention System）</dt><dd>システムやネットワークを監視し、不正または異常な通信を検知して、管理者に警告メールなどで通知するとともに、その通信をブロックするシステムのこと</dd><dt>UPS（Uninterruptible Power Supply）</dt><dd>落雷などによる突発的な停電が発生したときに、自家発電装置が電源を供給し始めるまで、またはシステムが安全に終了するまでの間、サーバに電源を供給する役目をもつ機器</dd></dl>停電時の電源供給に関する記述なので、<em class=\"r\">UPS</em>が当てはまります。<br><br>したがって「エ」が適切な組合せです。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "ファシリティマネジメント"
    ]
  },
  {
    "mondaibun": "リファクタリングの説明として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "ソフトウェアが提供する機能仕様を変えずに，内部構造を改善すること",
      "ソフトウェアの動作などを解析して，その仕様を明らかにすること",
      "ソフトウェアの不具合を修正し，仕様どおりに動くようにすること",
      "利用者の要望などを基に，ソフトウェアに新しい機能を加える修正をすること"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>リファクタリング</strong>(Refactoring)は、外部から見たときの振る舞いを変えずに、既存ソフトウェアの内部構造を変えることをいいます。完成済のプログラムを改善し、高効率化や保守性の向上を図ることを目的として行われます。<br><br>アルゴリズムを見直して処理効率を向上させる、プログラム内で複数行われる共通処理を関数化して保守性を向上させる、変数名の改善やコメントの追加などで可読性を良くする、などがリファクタリングの例です。<br><br>したがって「ア」が正解です。<ul><li class=\"lia\"><span class=\"cite\">ソフトウェアが提供する機能仕様を変えずに，内部構造を改善すること</span><br><em class=\"m\">正しい</em>。リファクタリングの説明です。</li><li class=\"lii\"><span class=\"cite\">ソフトウェアの動作などを解析して，その仕様を明らかにすること</span><br>リバースエンジニアリングの説明です。</li><li class=\"liu\"><span class=\"cite\">ソフトウェアの不具合を修正し，仕様どおりに動くようにすること</span><br>デバッグの説明です。</li><li class=\"lie\"><span class=\"cite\">利用者の要望などを基に，ソフトウェアに新しい機能を加える修正をすること</span><br>ソフトウェア保守の説明です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "内部統制において，不正防止を目的とした職務分掌に関する事例として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "申請者は自身の申請を承認できないようにする。",
      "申請部署と承認部署の役員を兼務させる。",
      "一つの業務を複数の担当者が手分けして行う。",
      "一つの業務を複数の部署で分散して行う。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>職務分掌</strong>とは、不正や間違いが発生するリスクを減らし、業務が正しく行われるように各担当者の職責と権限を適切に分離することです。業務の担当者と承認者を分ける、特定の者だけにしかできない業務を作らないなど、それぞれの担当者間で適切に相互牽制を働かせることが、内部不正が起こりにくい組織体制につながります。<ul><li class=\"lia\"><span class=\"cite\">申請者は自身の申請を承認できないようにする。</span><br><em class=\"m\">正しい</em>。申請者自身が承認できる状況では不正を起こす隙があります。職務を分けることで、内部不正の機会を無くしているので適切な職務分掌の事例です。</li><li class=\"lii\"><span class=\"cite\">申請部署と承認部署の役員を兼務させる。</span><br>申請とその承認という相対する業務の責任を1人の者に持たせるのは、権限や職責を分担させるという職務分掌の意義から言って不適切です。</li><li class=\"liu\"><span class=\"cite\">一つの業務を複数の担当者が手分けして行う。</span><br>職務分掌は、1つの業務を分担して行うように割り振ることではありません。</li><li class=\"lie\"><span class=\"cite\">一つの業務を複数の部署で分散して行う。</span><br>職務分掌は、1つの業務を分担して行うように割り振ることではありません。1つの業務を複数の部署で行う運用は、責任の所在が不明確になるので適切とは言えません。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "内部統制"
    ]
  },
  {
    "mondaibun": "ITサービスマネジメントにおいて，過去のインシデントの内容をFAQとしてデータベース化した。それによって改善が期待できる項目に関する記述a～cのうち，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,ITサービスに関連する構成要素の情報を必要な場合にいつでも確認できる。不適切。構成管理データベースを構築することによる効果です。FAQとは関係ありません。', 'b,要員候補の業務経歴を確認し，適切な要員配置計画を立案できる。不適切。人材データベースを構築することによる効果です。FAQとは関係ありません。', 'c,利用者からの問合せに対する一次回答率が高まる。適切。FAQに登録されている質問に対してはサービスデスク要員のスキルによらず回答できるようになるので、サービスデスクによる一次サポートで解決できる問合せの割合が増える効果が期待できます。']",
    "mondai": [
      "a",
      "a，b",
      "a，c",
      "c"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>FAQ</strong>(Frequently Asked Questions)は、何回も繰り返し質問される項目とその質問への回答をまとめたコンテンツのことです。いわゆる\"よくある質問とその答え\"や\"Q&amp;A\"と呼ばれるものです。頻繁に問い合わせがある内容をその答えとともに提示することで、素早く解決できるようになるため、サポートデスクのコスト削減につながります。<br><ol type=\"a\"><li><span class=\"cite\">ITサービスに関連する構成要素の情報を必要な場合にいつでも確認できる。</span><br>不適切。構成管理データベースを構築することによる効果です。FAQとは関係ありません。</li><li><span class=\"cite\">要員候補の業務経歴を確認し，適切な要員配置計画を立案できる。</span><br>不適切。人材データベースを構築することによる効果です。FAQとは関係ありません。</li><li><span class=\"cite\">利用者からの問合せに対する一次回答率が高まる。</span><br>適切。FAQに登録されている質問に対してはサービスデスク要員のスキルによらず回答できるようになるので、サービスデスクによる一次サポートで解決できる問合せの割合が増える効果が期待できます。</li></ol>適切なものは「c」だけなので「エ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "会計監査の目的として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "経理システムを含め，利用しているITに関するリスクをコントロールし，ITガバナンスが実現されていることを確認する。",
      "経理部門が保有しているPCの利用方法をはじめとして，情報のセキュリティに係るリスクマネジメントが効果的に実施されていることを確認する。",
      "組織内の会計業務などを含む諸業務が組織の方針に従って，合理的かつ効率的な運用が実現されていることを確認する。",
      "日常の各種取引の発生から決算報告書への集計に至るまで，不正や誤りのない処理が行われていることを確認する。"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>会計監査</strong>は、企業や組織の財務諸表や決算書が、一般に公正妥当と認められる企業会計の基準に準拠しているか、企業の財政状態、経営成績、キャッシュフローの状況が適切に表示されているかどうかを、第三者が評価するものです。組織内部で自主的に実施する内部監査と、外部の会計監査人によって実施される外部監査があります。<br><br>会計監査では、財務報告の基となった会計情報や会計処理に誤り、不正、誤謬、虚偽表示がないかといったことが監査人によりチェックされるので「エ」が適切な記述です。<ul><li class=\"lia\"><span class=\"cite\">経理システムを含め，利用しているITに関するリスクをコントロールし，ITガバナンスが実現されていることを確認する。</span><br>システム監査の説明です。</li><li class=\"lii\"><span class=\"cite\">経理部門が保有しているPCの利用方法をはじめとして，情報のセキュリティに係るリスクマネジメントが効果的に実施されていることを確認する。</span><br>情報セキュリティ監査の説明です。</li><li class=\"liu\"><span class=\"cite\">組織内の会計業務などを含む諸業務が組織の方針に従って，合理的かつ効率的な運用が実現されていることを確認する。</span><br>業務監査の説明です。</li><li class=\"lie\"><span class=\"cite\">日常の各種取引の発生から決算報告書への集計に至るまで，不正や誤りのない処理が行われていることを確認する。</span><br><em class=\"m\">正しい</em>。会計監査の説明です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "システム監査"
    ]
  },
  {
    "mondaibun": "ITが適切に活用されるために企業が実施している活動を，ルールを決める活動と，ルールに従って行動する活動に分けたとき，ルールを決める活動に該当するものはどれか。",
    "kouho": "[]",
    "mondai": [
      "IT投資判断基準の確立",
      "SLA遵守のためのオペレーション管理",
      "開発プロジェクトの予算管理",
      "標準システム開発手法に準拠した個別のプロジェクトの推進"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">IT投資判断基準の確立</span><br><em class=\"m\">正しい</em>。後に続く様々な活動が定めた判断基準に従って動くため、\"ルールを決める活動\"に該当します。</li><li class=\"lii\"><span class=\"cite\">SLA遵守のためのオペレーション管理</span><br>SLAというルールを順守するための管理活動なので、\"ルールに従って行動する活動\"に該当します。</li><li class=\"liu\"><span class=\"cite\">開発プロジェクトの予算管理</span><br>プロジェクトの予算という基準を順守するための管理活動なので、\"ルールに従って行動する活動\"に該当します。</li><li class=\"lie\"><span class=\"cite\">標準システム開発手法に準拠した個別のプロジェクトの推進</span><br>標準システム開発手法というルールを守るための管理活動なので、\"ルールに従って行動する活動\"に該当します。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "内部統制"
    ]
  },
  {
    "mondaibun": "システム開発のプロジェクトマネジメントに関する記述a～dのうち，スコープのマネジメントの失敗事例だけを全て挙げたものはどれか。",
    "kouho": "['a,開発に必要な人件費を過少に見積もったので，予算を超過した。誤り。予算の計画と管理を行うのはコストマネジメントです。', 'b,開発の作業に必要な期間を短く設定したので，予定期間で開発を完了させることができなかった。誤り。スケジュールの計画と管理を行うのはタイムマネジメントです。', 'c,作成する機能の範囲をあらかじめ決めずにプロジェクトを開始したので，開発期間を超過した。正しい。プロジェクトで実施する範囲の定義が不十分だったことにより起きた失敗なので、スコープマネジメントの問題です。', 'd,プロジェクトで実施すべき作業が幾つか計画から欠落していたので，システムを完成できなかった。正しい。実施すべき作業の見落としによる失敗なので、スコープマネジメントの問題です。']",
    "mondai": [
      "a，b",
      "b，c",
      "b，d",
      "c，d"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>スコープマネジメント</strong>は、プロジェクトの遂行に必要な作業を過不足なく定義し、その詳細を記述し、定めた実施範囲をプロジェクト終了まで管理することを目的とするプロセスです。スコープの定義やWBSの作成を行います。スコープマネジメントとくれば「プロジェクトで実施する作業の範囲」です。<br><ol type=\"a\"><li><span class=\"cite\">開発に必要な人件費を過少に見積もったので，予算を超過した。</span><br>誤り。予算の計画と管理を行うのはコストマネジメントです。</li><li><span class=\"cite\">開発の作業に必要な期間を短く設定したので，予定期間で開発を完了させることができなかった。</span><br>誤り。スケジュールの計画と管理を行うのはタイムマネジメントです。</li><li><span class=\"cite\">作成する機能の範囲をあらかじめ決めずにプロジェクトを開始したので，開発期間を超過した。</span><br>正しい。プロジェクトで実施する範囲の定義が不十分だったことにより起きた失敗なので、スコープマネジメントの問題です。</li><li><span class=\"cite\">プロジェクトで実施すべき作業が幾つか計画から欠落していたので，システムを完成できなかった。</span><br>正しい。実施すべき作業の見落としによる失敗なので、スコープマネジメントの問題です。</li></ol>スコープマネジメントの失敗事例に該当するのは「c，d」なので「エ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ソフトウェア開発の仕事に対し，10名が15日間で完了する計画を立てた。しかし，仕事開始日から5日間は，8名しか要員を確保できないことが分かった。計画どおり15日間で仕事を完了させるためには，6日目以降は何名の要員が必要か。ここで，各要員の生産性は同じものとする。",
    "kouho": "[]",
    "mondai": [
      "10",
      "11",
      "12",
      "14"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">ある作業が完成するまでに必要となる作業量（＝工数）は、要員数と時間の積で求めます。<br><br>　工数＝要員数×時間<br><br>この問題では、10名が15日間かけて完成させる仕事なので、工数は「10人×15日＝150人日」ということになります。<br><br>8人が仕事開始日から5日間で終了できる工数は「8人×5日＝40人日」なので、5日目終了時点で残る工数は「150人日－40人日＝110人日」です。110人日を残り10日間で完成させるために必要となる要員数は、<br><br>　110人日÷10日＝<em class=\"r\">11</em>人<br><br>したがって「イ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "プロジェクトに該当する事例として，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,会社合併に伴う新組織への移行適切。合併という目標達成のために行われる一度限りの業務なので独自性があり、合併が成功すれば終わるので有期性もあります。したがってプロジェクトに該当します。', 'b,社内システムの問合せや不具合を受け付けるサービスデスクの運用不適切。いわゆる定常業務は独自性も有期性もないため、プロジェクトではありません。', 'c,新規の経理システム導入に向けたプログラム開発適切。プログラム開発は案件ごとに内容が異なるので独自性があり、開発完了により終わるので有期性もあります。したがってプロジェクトに該当します。', 'd,毎年度末に実施する会計処理不適切。毎年行われる定型的な業務であって独自性がないため、プロジェクトではありません。']",
    "mondai": [
      "a，c",
      "b，c",
      "b，d",
      "c"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>プロジェクト</strong>とは、特定の目的や大きな目標を達成するために実行される、定常業務ではない一度限りの活動や計画をいいます。PMBOKが「プロジェクトとは、独自の製品、サービス、所産を創造するために実施される有期性の業務である」と定義しているように、プロジェクトが備える特性は次の2つです。<ul><li><strong>独自性</strong>　一度限りの独自の成果を生み出すために遂行される</li><li><strong>有期性</strong>　始まりと終わりがある</li></ul><ol type=\"a\"><li><span class=\"cite\">会社合併に伴う新組織への移行</span>適切。合併という目標達成のために行われる一度限りの業務なので独自性があり、合併が成功すれば終わるので有期性もあります。したがってプロジェクトに該当します。</li><li><span class=\"cite\">社内システムの問合せや不具合を受け付けるサービスデスクの運用</span>不適切。いわゆる定常業務は独自性も有期性もないため、プロジェクトではありません。</li><li><span class=\"cite\">新規の経理システム導入に向けたプログラム開発</span>適切。プログラム開発は案件ごとに内容が異なるので独自性があり、開発完了により終わるので有期性もあります。したがってプロジェクトに該当します。</li><li><span class=\"cite\">毎年度末に実施する会計処理</span>不適切。毎年行われる定型的な業務であって独自性がないため、プロジェクトではありません。</li></ol>プロジェクトに該当するのは「a，c」なので「ア」の組合せが適切です。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "システム開発プロジェクトを終結する時に，プロジェクト統合マネジメントで実施する活動として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "工程の進捗の予定と実績の差異を分析する。",
      "作成した全ての成果物の一覧を確認する。",
      "総費用の予算と実績の差異を分析する。",
      "知識や教訓を組織の資産として登録する。"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>プロジェクト統合マネジメント</strong>は、PMBOKに定義されているプロジェクトにおける知識エリアの1つで、プロジェクトマネジメント活動で発生する様々なプロセスを相互に調整・管理するプロセスです。プロジェクトを全体からみて最適化する役割と考えてください。<br><br>プロジェクト統合マネジメントが行う主要な活動は次のとおりです。<ul><li>プロジェクト憲章の作成</li><li>プロジェクトマネジメント計画書の作成</li><li>プロジェクト作業の指揮・マネジメント</li><li><em class=\"m\">プロジェクト知識のマネジメント</em></li><li>プロジェクト作業の監視・コントロール</li><li>統合変更管理</li><li>プロジェクトやフェーズの終結</li></ul><ul><li class=\"lia\"><span class=\"cite\">工程の進捗の予定と実績の差異を分析する。</span>スケジュールに関することなので、プロジェクトタイムマネジメントで実施する活動です。</li><li class=\"lii\"><span class=\"cite\">作成した全ての成果物の一覧を確認する。</span>プロジェクトの作業範囲に関することなので、プロジェクトスコープマネジメントで実施する活動です。</li><li class=\"liu\"><span class=\"cite\">総費用の予算と実績の差異を分析する。</span>コストに関することなので、プロジェクトコストマネジメントで実施する活動です。</li><li class=\"lie\"><span class=\"cite\">知識や教訓を組織の資産として登録する。</span><em class=\"m\">正しい回答</em>。プロジェクト統合マネジメントの活動のひとつに、プロジェクト知識のマネジメントがあります。これはプロジェクトに既存知識を生かすとともに、プロジェクトによって新たに創造された知識を組織の業務や将来のプロジェクト等で活用できるように管理する活動です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "あるシステムの運用において，利用者との間でSLAを交わし，利用可能日を月曜日から金曜日，1日の利用可能時間を7時から22時まで，稼働率を98%以上で合意した。1週間の運用において，障害などでシステムの停止を許容できる時間は最大何時間か。",
    "kouho": "[]",
    "mondai": [
      "0.3",
      "1.5",
      "1.8",
      "2.1"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">SLAで取り決めた稼働率98％を達成するには、計画停止時間などを除き、システムの停止時間を利用可能時間の2%以内に収めなければなりません。<br><br>1日の利用可能時間は「22時－7時＝15時間」、1週間のうち利用可能日は月～金の5日間なので、1週間の総利用可能時間は、<br><br>　15時間×5日間＝75時間<br><br>このうち2%に相当する時間は、<br><br>　75時間×2％＝1.5時間<br><br>したがって最大許容時間は1.5時間が適切です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "サービスデスクを評価するためには適切なKPIを定めて評価する必要がある。顧客満足度を高めるために値が小さい方が良いKPIとして，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,SLAで合意された目標時間内に対応が完了したインシデント件数の割合不適切。目標解決時間を順守できた数は多い方が良いので、値が大きい方が良いKPIと言えます。', 'b,1回の問合せで解決ができたインシデント件数の割合不適切。何回も問い合わせた末に解決するよりも1回で解決できた方が良いので、値が大きい方が良いKPIと言えます。', 'c,二次担当へエスカレーションされたインシデント件数の割合適切。二次担当へのエスカレーションは、サービスデスクだけでは問題が解決できなかったときに行われます。一次サポートで解決できた方が回復までの時間は短くて済みますから、二次担当へのエスカレーションは少ない方が好ましいです。よって、値が小さい方が良いKPIと言えます。', 'd,利用者がサービスデスクの担当者につながるまでに費やした時間適切。サービスデスクにつながるまでの時間が長ければその分だけサービスの回復が遅れることになります。必要なときにすぐに利用できるほどサービスデスクとして優れているので、値が小さい方が良いKPIと言えます。']",
    "mondai": [
      "a，b",
      "a，d",
      "b，c",
      "c，d"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ol type=\"a\"><li><span class=\"cite\">SLAで合意された目標時間内に対応が完了したインシデント件数の割合</span>不適切。目標解決時間を順守できた数は多い方が良いので、値が大きい方が良いKPIと言えます。</li><li><span class=\"cite\">1回の問合せで解決ができたインシデント件数の割合</span>不適切。何回も問い合わせた末に解決するよりも1回で解決できた方が良いので、値が大きい方が良いKPIと言えます。</li><li><span class=\"cite\">二次担当へエスカレーションされたインシデント件数の割合</span>適切。二次担当へのエスカレーションは、サービスデスクだけでは問題が解決できなかったときに行われます。一次サポートで解決できた方が回復までの時間は短くて済みますから、二次担当へのエスカレーションは少ない方が好ましいです。よって、値が小さい方が良いKPIと言えます。</li><li><span class=\"cite\">利用者がサービスデスクの担当者につながるまでに費やした時間</span>適切。サービスデスクにつながるまでの時間が長ければその分だけサービスの回復が遅れることになります。必要なときにすぐに利用できるほどサービスデスクとして優れているので、値が小さい方が良いKPIと言えます。</li></ol>小さい方が良いKPIは「c，d」なので「エ」の組合せが正解です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "アジャイル開発に関する記述として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "開発する機能を小さい単位に分割して，優先度の高いものから短期間で開発とリリースを繰り返す。",
      "共通フレームを適用して要件定義，設計などの工程名及び作成する文書を定義する。",
      "システム開発を上流工程から下流工程まで順番に進めて，全ての開発工程が終了してからリリースする。",
      "プロトタイプを作成して利用者に確認を求め，利用者の評価とフィードバックを行いながら開発を進めていく。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>アジャイル開発</strong>は、顧客の要求に応じて、迅速かつ適応的にソフトウェア開発を行う軽量な開発手法の総称です。アジャイル開発の方法論として、スクラムやXP(エクストリームプログラミング)などのフレームワークがあります。<br><br>アジャイル開発の最たる特徴は、開発する機能を細かく分割し、概ね数週間程度ごとに分析、設計、実装、テスト、リリースを反復しながら、段階的に動作可能なシステムを作り上げていくことにあります。これは、最初に全体の設計や計画を決定し、計画に従って作業を進める従来型の手法と大きく異なります。このように短いサイクルを繰り返すことにより、ビジネス環境の変化や仕様変更に対応することができるという柔軟性があります。<ul><li class=\"lia\"><span class=\"cite\">開発する機能を小さい単位に分割して，優先度の高いものから短期間で開発とリリースを繰り返す。</span><em class=\"m\">正しい回答</em>。アジャイル開発に関する記述です。反復するサイクルはスプリントやイテレーションと呼ばれます。</li><li class=\"lii\"><span class=\"cite\">共通フレームを適用して要件定義，設計などの工程名及び作成する文書を定義する。</span>アジャイル開発では、包括的なドキュメントの作成は要求されません。憶測や誤解が生じやすいドキュメントによるコミュニケーションではなく、顧客に実際に動くソフトウェアの形を提示することで、要望や修正を素早く確実に取り入れます。</li><li class=\"liu\"><span class=\"cite\">システム開発を上流工程から下流工程まで順番に進めて，全ての開発工程が終了してからリリースする。</span>ウォーターフォールモデルに関する記述です。アジャイル開発では、小さい単位で開発とリリースを繰り返します。</li><li class=\"lie\"><span class=\"cite\">プロトタイプを作成して利用者に確認を求め，利用者の評価とフィードバックを行いながら開発を進めていく。</span>プロトタイピングモデルに関する記述です。アジャイル開発では試作品を作成するのではなく、実際にリリースしたソフトウェアからフィードバックを得ることで、方向性を修正していきます。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "あるプロジェクトの作業間の関係と所要時間がアローダイアグラムで示されている。このアローダイアグラムのBからEの四つの結合点のうち，工程全体の完了時間に影響を与えることなく，その結合点から始まる全ての作業の開始を最も遅らせることができるものはどれか。ここで，各結合点から始まる作業はその結合点に至る作業が全て完了するまで開始できず，作業から次の作業への段取り時間は考えないものとする。",
    "kouho": "[]",
    "mondai": [
      "B",
      "C",
      "D",
      "E"
    ],
    "mondaiimg": [
      "img/41.png"
    ],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">まず設問のアローダイアグラムにおけるクリティカルパスを考えます。開始点から終了点に至るすべての矢印の流れを洗い出して、その中で最も期間を要するのがクリティカルパスです。<dl><dt>A→B→D→F</dt><dt></dt><dd>15＋10＋20＝45時間</dd><dt>A→B→D→E→F</dt><dd>15＋10＋10＋15＝50時間</dd><dt>A→B→E→F</dt><dd>15＋25＋15＝55時間</dd><dt>A→C→E→F</dt><dd>10＋15＋15＝40時間</dd></dl>以上より、クリティカルパスは「A→B→E→F」、最短所要時間は55時間となります。<br><br>クリティカルパスは、プロジェクトを最短で完了するために遅延することが許されない一連の工程のことですから、設問の条件である「工程全体の完了時間に影響を与えず、遅らせることができる」のは、クリティカルパス上に<u>ない</u>工程でなければなりません。これを満たすのは結合点CとDの2つです。<br><br>結合点Cから始まる作業は、クリティカルパスである結合点Eからの作業が開始するまでに終わっていれば良いので、最大で、A→B→E（40時間）とA→C→E（25時間）の差である15時間を遅らせることができます。これに対して、結合点Dから始まる作業は、A→B→E（40時間）とA→B→D→E（35時間）の差である5時間しか遅らせることができません。したがって、最も遅らせることができる結合点は「C」となります。<div class=\"img_margin\"><img alt=\"41_1.png/image-size:396×195\" height=\"195\" src=\"img/41_1.png\" width=\"396\"/></div></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "システム監査人の役割として，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,監査手続の種類，実施時期，適用範囲などについて，監査計画を立案する。適切。システム監査人は、実施するシステム監査の目的を効果的かつ効率的に達成するために、監査手続の種類、実施時期、適用範囲等について、適切な監査計画を立案しなければなりません。監査計画は、中長期計画、年度計画、個別監査計画に分けて策定されます。', 'b,監査の目的に応じた監査報告書を作成し，社内に公開する。不適切。監査報告書は、監査の終了後にシステム監査人により作成され、監査依頼者に提出されます。監査報告書を公開するかどうかは監査依頼者の決めるべきことであり、監査人の役割ではありません。', 'c,監査報告書にある改善提案に基づく改善の実施を監査対象部門に指示する。不適切。改善提案に基づく改善活動は、監査対象部門が主体となり自らの責任において実施されるべきものです。システム監査人はそれを支援をすることはあるものの、改善の実施方法等について直接的な指示をすることはありません。', 'd,監査報告書にある改善提案に基づく改善の実施状況をモニタリングする。適切。システム監査人は監査報告書に改善提案を記載した場合、監査対象部門によって適切な措置が講じられているかどうかを確認するために、改善計画とその実施状況に関する情報を入手し、改善状況をモニタリングしなければなりません。']",
    "mondai": [
      "a，b",
      "a，d",
      "b，c",
      "c，d"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ol type=\"a\"><li><span class=\"cite\">監査手続の種類，実施時期，適用範囲などについて，監査計画を立案する。</span>適切。システム監査人は、実施するシステム監査の目的を効果的かつ効率的に達成するために、監査手続の種類、実施時期、適用範囲等について、適切な監査計画を立案しなければなりません。監査計画は、中長期計画、年度計画、個別監査計画に分けて策定されます。</li><li><span class=\"cite\">監査の目的に応じた監査報告書を作成し，社内に公開する。</span>不適切。監査報告書は、監査の終了後にシステム監査人により作成され、監査依頼者に提出されます。監査報告書を公開するかどうかは監査依頼者の決めるべきことであり、監査人の役割ではありません。</li><li><span class=\"cite\">監査報告書にある改善提案に基づく改善の実施を監査対象部門に指示する。</span>不適切。改善提案に基づく改善活動は、監査対象部門が主体となり自らの責任において実施されるべきものです。システム監査人はそれを支援をすることはあるものの、改善の実施方法等について直接的な指示をすることはありません。</li><li><span class=\"cite\">監査報告書にある改善提案に基づく改善の実施状況をモニタリングする。</span>適切。システム監査人は監査報告書に改善提案を記載した場合、監査対象部門によって適切な措置が講じられているかどうかを確認するために、改善計画とその実施状況に関する情報を入手し、改善状況をモニタリングしなければなりません。</li></ol>適切なものの組合せは「a，d」なので「イ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "システム監査"
    ]
  },
  {
    "mondaibun": "情報システムに関する施設や設備を維持保全するために行うリスク対策のうち，ファシリティマネジメントの観点から行う対策として，適切なものだけを全て挙げたものはどれか。",
    "kouho": "['a,コンピュータ室への入室を，認可した者だけに限定する。適切。コンピュータ室という物理的空間とその室内のコンピュータを、侵入や盗難等から守るためのリスク対策です。物的なIT資産を安全に保つための対策なので、ファシリティマネジメントの事例に該当します。', 'b,コンピュータの設置場所を示す標識を掲示しない。適切。コンピュータの設置場所を隠すことは、情報を保護するとともに、物理的な攻撃や破壊からコンピュータを保護するためのリスク対策です。物的なIT資産を安全に保つための対策なので、ファシリティマネジメントの事例に該当します。', 'c,利用者のPCにマルウェア対策ソフトを導入する。不適切。物的資産ではないデータや情報の管理は、ファシリティマネジメントの対象外です。']",
    "mondai": [
      "a",
      "a，b",
      "a，c",
      "b，c"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ファシリティマネジメント</strong>は、企業・団体が保有または使用する全施設資産とそれらの利用環境を経営戦略的視点から総合的かつ統括的に企画、管理、活用する経営活動です（参考：日本ファシリティマネジメント協会）。システム環境の基盤となる土地、建物、構築物、設備などの物的な資産や物理的空間が最適な状態であるように管理することを目的とします。具体的には、コンピュータシステムやネットワーク施設基盤が快適であること、安全性が確保されていること、運用費用が少ないこと、最大限効果的に活用されていることなどを目指します。<br><ol type=\"a\"><li><span class=\"cite\">コンピュータ室への入室を，認可した者だけに限定する。</span>適切。コンピュータ室という物理的空間とその室内のコンピュータを、侵入や盗難等から守るためのリスク対策です。物的なIT資産を安全に保つための対策なので、ファシリティマネジメントの事例に該当します。</li><li><span class=\"cite\">コンピュータの設置場所を示す標識を掲示しない。</span>適切。コンピュータの設置場所を隠すことは、情報を保護するとともに、物理的な攻撃や破壊からコンピュータを保護するためのリスク対策です。物的なIT資産を安全に保つための対策なので、ファシリティマネジメントの事例に該当します。</li><li><span class=\"cite\">利用者のPCにマルウェア対策ソフトを導入する。</span>不適切。物的資産ではないデータや情報の管理は、ファシリティマネジメントの対象外です。</li></ol>適切なものの組合せは「a，b」なので「イ」が正解です。</div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "ファシリティマネジメント"
    ]
  },
  {
    "mondaibun": "提供しているITシステムが事業のニーズを満たせるように，人材，プロセス，情報技術を適切に組み合わせ，継続的に改善して管理する活動として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "ITサービスマネジメント",
      "システム監査",
      "ヒューマンリソースマネジメント",
      "ファシリティマネジメント"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">ITサービスマネジメント</span><em class=\"m\">正しい回答</em>。<strong>ITサービスマネジメント</strong>は、IT部門の業務を「ITサービス」として捉え、ユーザーに一定の品質のサービスを提供し続けるために情報システムや組織などを適切に管理する仕組みのことです。その目的を達成するために情報システムを安定的かつ効率的に運用し、また、利用者に対するサービスの品質を維持・向上させる活動を行います。</li><li class=\"lii\"><span class=\"cite\">システム監査</span>システム監査は、専門性と客観性を備えたシステム監査人が、一定の基準に基づいて情報システムを総合的に点検・評価・検証し、情報システムのガバナンス、マネジメント、コントロールの適切性に保証を与えたり、改善のための助言をしたりすることです。</li><li class=\"liu\"><span class=\"cite\">ヒューマンリソースマネジメント</span>ヒューマンリソースマネジメントは、従業員を経営上の重要な資源と位置付け、長期的な計画に基づき、戦略的に人材の育成や活用を図る人事資源管理のことです。</li><li class=\"lie\"><span class=\"cite\">ファシリティマネジメント</span>ファシリティマネジメントは、組織が保有または使用する全施設資産、およびそれらの利用環境を経営戦略的視点から総合的かつ統括的に企画、管理、活用する管理手法です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメント"
    ]
  },
  {
    "mondaibun": "本番稼働後の業務遂行のために，業務別にサービス利用方法の手順を示した文書として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "FAQ",
      "サービスレベル合意書",
      "システム要件定義書",
      "利用者マニュアル"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">FAQ</span>Frequently Asked Questionsの略。「よくある質問とその答え」をまとめたドキュメントを指します。FAQを作成し公開することで、利用者が既知の問題を自分で解決できるようになるため、利用者満足度の向上や利用者対応業務の効率化などの効果が望めます。</li><li class=\"lii\"><span class=\"cite\">サービスレベル合意書</span>サービスレベル合意書は、サービス提供者とサービス利用者の間で、提供されるITサービスの品目や品質についての合意を明文化したものです。SLA(Service Level Agreement)とも呼ばれます。</li><li class=\"liu\"><span class=\"cite\">システム要件定義書</span>システム要件定義書は、これから設計・開発するシステムに求められる機能、能力、安全性、セキュリティ、テスト項目などの技術的な要件を取りまとめたものです。</li><li class=\"lie\"><span class=\"cite\">利用者マニュアル</span><em class=\"m\">正しい回答</em>。<strong>利用者マニュアル</strong>は、システムやソフトウェアを使って行われる業務について、操作や機能の説明、トラブルシューティング方法、システム運用などの手順を文書化したものです。利用者がスムーズにサービスを利用できるようにするためのガイドとしての役割があります。</li></ul></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "ITサービスマネジメントの管理プロセスに関する記述a～cと用語の適切な組合せはどれか。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "img/46.png"
    ],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">ITサービスマネジメントにおける構成管理、問題管理、リリース及び展開管理は、それぞれ次の活動を行う管理プロセスです。<dl><dt>構成管理</dt><dd>ITサービスを構成するすべてのIT資産を明確にし、これらの維持管理や他のプロセスへの構成情報の提供を行うプロセス</dd><dt>問題管理</dt><dd>インシデントや障害原因の把握と管理を行い、根本原因を究明して、回避策や恒久的な対策を策定するプロセス</dd><dt>リリース及び展開管理</dt><dd>変更管理プロセスで承認された変更について、ITサービスへの変更作業を実施するプロセス</dd></dl>aはリリース及び展開管理、bは問題管理、cは構成管理となるので、適切な組合せは「エ」です。<br><br>サービスの運用に係る以下2つのプロセスも押さえておきましょう。<dl><dt>インシデント管理</dt><dd>システムの異常終了や構成機器の障害発生などのようにサービスの中断やサービス品質の低下につながるような事象が発生した時に、サービスの中断時間を最小限に抑えて速やかに回復することを目指すプロセス</dd><dt>変更管理</dt><dd>システムに変更を加えることによるメリットとデメリットを明らかにし、ITサービス変更に伴うリスクを管理するプロセス</dd></dl></div>",
    "category": [
      "マネジメント系",
      "サービスマネジメント",
      "サービスマネジメントシステム"
    ]
  },
  {
    "mondaibun": "ソフトウェアの開発におけるDevOpsに関する記述として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "開発側が重要な機能のプロトタイプを作成し，顧客とともにその性能を実測して妥当性を評価する。",
      "開発側では，開発の各工程でその工程の完了を判断した上で次工程に進み，総合テストで利用者が参加して操作性の確認を実施した後に運用側に引き渡す。",
      "開発側と運用側が密接に連携し，自動化ツールなどを活用して機能の導入や更新などを迅速に進める。",
      "システム開発において，機能の拡張を図るために，固定された短期間のサイクルを繰り返しながらプログラムを順次追加する。"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>DevOps</strong>(デブオプス)は、開発を意味する Development と運用を意味する Operations を組み合わせた造語で、開発担当チームと運用担当チームが緊密に協力・連携し、自動化ツールなどを活用して柔軟かつスピーディに開発を進めるソフトウェア開発手法です。<br><br>自動でビルドとテストを行う「継続的インテグレーション」、常にリリース可能な状態を維持する「継続的デリバリ」、コードの変更を自動的に本番環境にリリースする「継続的デプロイメント」の3つのプラクティスを適用することにより、開発効率の向上、迅速なリリース、信頼性の向上、共同作業による文化の醸成などの効果が期待できます。<div class=\"img_margin\"><img alt=\"40.png/image-size:354×174\" height=\"174\" src=\"img/40.png\" width=\"354\"/></div><ul><li class=\"lia\"><span class=\"cite\">開発側が重要な機能のプロトタイプを作成し，顧客とともにその性能を実測して妥当性を評価する。</span>プロトタイピングモデルに関する記述です。</li><li class=\"lii\"><span class=\"cite\">開発側では，開発の各工程でその工程の完了を判断した上で次工程に進み，総合テストで利用者が参加して操作性の確認を実施した後に運用側に引き渡す。</span>ウォーターフォールモデルに関する記述です。</li><li class=\"liu\"><span class=\"cite\">開発側と運用側が密接に連携し，自動化ツールなどを活用して機能の導入や更新などを迅速に進める。</span><em class=\"m\">正しい回答</em>。\"開発側と運用側の連携\"・\"自動化ツール\"のキーワードより、DevOpsに関する記述であるとわかります。</li><li class=\"lie\"><span class=\"cite\">システム開発において，機能の拡張を図るために，固定された短期間のサイクルを繰り返しながらプログラムを順次追加する。</span>アジャイル開発に関する記述です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "ソフトウェア開発管理技術",
      "開発プロセス・手法"
    ]
  },
  {
    "mondaibun": "システム監査で用いる判断尺度の選定方法に関する記述として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "システム監査ではシステム管理基準の全項目をそのまま使用しなければならない。",
      "システム監査のテーマに応じて，システム管理基準以外の基準を使用してもよい。",
      "システム監査のテーマによらず，システム管理基準以外の基準は使用すべきでない。",
      "アジャイル開発では，システム管理基準は使用すべきでない。"
    ],
    "mondaiimg": [],
    "kotae": "イ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">監査の判断尺度とは、システム監査人が監査対象を点検・評価・検証する際に使用する客観的な基準であり、その状態の適切・不適切性やその度合いを判断するための拠り所となる資料です。<br><br>システム監査に当たっては、原則としてはシステム管理基準が判断尺度となりますが、情報セキュリティの監査を目的とするときは情報セキュリティ管理基準、さらにIoTシステムのセキュリティを監査する場合はIoTセキュリティガイドラインなど、監査テーマに応じた基準・ガイドライン等を判断尺度として利用することが望まれます。必ずしも基準・ガイドライン等の全項目を使用する必要はなく、必要に応じて適宜選択した部分だけを判断尺度として利用することもできます。<ul><li class=\"lia\"><span class=\"cite\">システム監査ではシステム管理基準の全項目をそのまま使用しなければならない。</span>全項目を使用する必要はありません。監査のニーズによっては、基準等の一部分や、組織体の状況に適合するように適宜選択した項目群を判断尺度とすることもできます。</li><li class=\"lii\"><span class=\"cite\">システム監査のテーマに応じて，システム管理基準以外の基準を使用してもよい。</span><em class=\"m\">正しい回答</em>。監査テーマに応じて、他のガイドラインや組織体独自の諸規定やマニュアルを判断尺度として用いることもできます。</li><li class=\"liu\"><span class=\"cite\">システム監査のテーマによらず，システム管理基準以外の基準は使用すべきでない。</span>監査テーマによっては、システム管理基準以外の基準を使用したほうが効果的な場合があり、そのような場合は他の基準等を判断尺度として利用することもできます。</li><li class=\"lie\"><span class=\"cite\">アジャイル開発では，システム管理基準は使用すべきでない。</span>システム管理基準は、アジャイル開発の監査における判断尺度として用いることもできます。ただし、アジャイル開発では詳細なドキュメントが作成されないなどの特徴があるため、監査を行うに当たりそれに応じた特別な考慮が必要となります。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "システム監査"
    ]
  },
  {
    "mondaibun": "ソフトウェア開発プロジェクトにおける，コストの見積手法には，積み上げ法，ファンクションポイント法，類推見積法などがある。見積りで使用した手法とその特徴に関する記述a～cの適切な組合せはどれか。",
    "kouho": "",
    "mondai": [
      "ア",
      "イ",
      "ウ",
      "エ"
    ],
    "mondaiimg": [
      "img/49.png"
    ],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">コストの見積手法のうち、積み上げ法、ファンクションポイント法、類推見積法は、それぞれ次のようにコストを見積もる手法です。<dl><dt>積み上げ法</dt><dd>プロジェクトで実施すべき作業をWBSなどで段階的に分割した後、細分化した個々の作業ごとの工数を割り出し、それを合計して全体の工数を見積もる手法</dd><dt>ファンクションポイント法</dt><dd>外部入出力や内部ファイルの数と難易度の高さから論理的にファンクションポイントを算出し、ソフトウェアの開発規模を見積もる手法</dd><dt>類推見積法</dt><dd>過去に経験した類似のシステムについての実績データを基にして、システムの相違点を調べ、同じ部分については過去のデータを使い、異なった部分は経験から規模と工数を見積もる手法</dd></dl>aは積み上げ法、bは類推見積法、cはファンクションポイント法となるので、適切な組合せは「ア」です。</div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ソフトウェア製品の品質特性を，移植性，機能適合性，互換性，使用性，信頼性，性能効率性，セキュリティ，保守性に分類したとき，RPAソフトウェアの使用性に関する記述として，最も適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "RPAが稼働するPCのOSが変わっても動作する。",
      "RPAで指定した時間及び条件に基づき，適切に自動処理が実行される。",
      "RPAで操作対象となるアプリケーションソフトウェアがバージョンアップされても，簡単な設定変更で対応できる。",
      "RPAを利用したことがない人でも，簡単な教育だけで利用可能になる。"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\">ソフトウェア製品の品質特性は、システム／ソフトウェアの品質面での特徴を8つの特性とそれに付随する副特性として定義したものです。これらの定義された特性は、要件定義や受入れテストにおいてシステム／ソフトウェアの品質を仕様化し、測定し、評価するための一貫した用語として使うことができます。<dl><dt>機能適合性</dt><dd>システムがニーズを満足する機能を提供する度合い</dd><dt>性能効率性</dt><dd>使用する資源の量に関係する性能の度合い</dd><dt>互換性</dt><dd>他のシステムや構成要素の情報を交換することができる度合い</dd><dt>使用性</dt><dd>利用者が有効性、効率性、満足性をもってシステムを利用することができる度合い</dd><dt>信頼性</dt><dd>指定の時間・条件下でシステムが機能を実行する度合い</dd><dt>セキュリティ</dt><dd>システムが情報やデータを保護する度合い</dd><dt>保守性</dt><dd>システムを修正する際の有効性・効率性の度合い</dd><dt>移植性</dt><dd>他の環境にシステムを移す際の有効性・効率性の度合い</dd></dl>選択肢の記述が、8つの品質特性のどれに当たるかを考えます。<ul><li class=\"lia\"><span class=\"cite\">RPAが稼働するPCのOSが変わっても動作する。</span>他の環境でも動作する性質なので、移植性に関する記述です。</li><li class=\"lii\"><span class=\"cite\">RPAで指定した時間及び条件に基づき，適切に自動処理が実行される。</span>指定の時間・条件の下で明示された機能を実行できる性質なので、信頼性に関する記述です。</li><li class=\"liu\"><span class=\"cite\">RPAで操作対象となるアプリケーションソフトウェアがバージョンアップされても，簡単な設定変更で対応できる。</span>ソフトウェアの修正を簡単（低コスト＝効率的）に行うことができる性質なので、保守性に関する記述です。</li><li class=\"lie\"><span class=\"cite\">RPAを利用したことがない人でも，簡単な教育だけで利用可能になる。</span><em class=\"m\">正しい回答</em>。ソフトウェアの使用を簡単（低コスト＝効率的）に行うことができる性質なので、使用性に関する記述です。</li></ul><div class=\"img_margin\"><img alt=\"50.png/image-size:576×219\" height=\"219\" src=\"img/50.png\" width=\"576\"/></div></div>",
    "category": [
      "マネジメント系",
      "システム開発技術",
      "システム開発技術"
    ]
  },
  {
    "mondaibun": "システム開発プロジェクトにおいて，テスト中に発見された不具合の再発防止のために不具合分析を行うことにした。テスト結果及び不具合の内容を表に記入し，不具合ごとに根本原因を突き止めた後に，根本原因ごとに集計を行い発生頻度の多い順に並べ，主要な根本原因の特定を行った。ここで利用した図表のうち，根本原因を集計し，発生頻度順に並べて棒グラフで示し，累積値を折れ線グラフで重ねて示したものはどれか。",
    "kouho": "[]",
    "mondai": [
      "散布図",
      "チェックシート",
      "特性要因図",
      "パレート図"
    ],
    "mondaiimg": [],
    "kotae": "エ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>パレート図</strong>は、値の大きい順に分析対象の項目を並べた棒グラフと、累積構成比を表す折れ線グラフを組み合わせた複合グラフで、主に複数の分析対象の中から重要な要素を識別するために使用されます。<br><br>棒グラフに折れ線グラフを重ねるという記述より、パレート図とわかります。<div class=\"img_margin\"><img alt=\"51.png/image-size:415×230\" height=\"230\" src=\"img/51.png\" width=\"415\"/></div><ul><li class=\"lia\"><span class=\"cite\">散布図</span>散布図は、縦軸・横軸に2項目の量や大きさ等を対応させて分析対象のデータを打点した図で、2種類のデータの関係性を表すために使用されます。</li><li class=\"lii\"><span class=\"cite\">チェックシート</span>チェックシートは、確認すべき項目を一覧化したものです。ローテクな方法ですが、確認作業を仕組み化することができる優れた方法です。プロジェクト品質マネジメントでも品質の評価に用いることができます。</li><li class=\"liu\"><span class=\"cite\">特性要因図</span>特性要因図は、現れた特性（結果）とそれに影響を及ぼしたと思われる要因の関係を体系的に表わした図です。多数の要素を直接的な原因と間接的な原因に分別したり、真の問題点を明確にしたりするために使用されます。</li><li class=\"lie\"><span class=\"cite\">パレート図</span><em class=\"m\">正しい回答</em>。パレート図は、要素のうち重要なものを識別するために使用されます。プロジェクトの品質管理において使用されるツールのひとつです。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "システム開発プロジェクトにおいて，新機能の追加要求が変更管理委員会で認可された後にプロジェクトスコープマネジメントで実施する活動として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "新機能を追加で開発するためにWBSを変更し，コストの詳細な見積りをするための情報として提供する。",
      "新機能を追加で開発するためのWBSのアクティビティの実行に必要なスキルを確認し，必要に応じてプロジェクトチームの能力向上を図る。",
      "変更されたWBSに基づいてスケジュールを作成し，完了時期の見通しを提示する。",
      "変更されたWBSに基づいて要員の充足度を確認し，必要な場合は作業の外注を検討する。"
    ],
    "mondaiimg": [],
    "kotae": "ア",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>プロジェクトスコープマネジメント</strong>は、プロジェクトの実施範囲(スコープ)を明らかにし、成果物単位でプロジェクト全体を階層的に要素分解したWBSの作成などを行う管理プロセスです。プロジェクトの遂行に必要な作業を過不足なく定義し、コントロールすることを目的としています。プロジェクトの実行中は、スコープが勝手に拡大しないように監視し、プロジェクトに変更があった場合にその変更がスコープに適切に反映されるように管理します。<ul><li class=\"lia\"><span class=\"cite\">新機能を追加で開発するためにWBSを変更し，コストの詳細な見積りをするための情報として提供する。</span><em class=\"m\">正しい回答</em>。プロジェクトスコープマネジメントの活動です。プロジェクトの実施範囲に変更があったときに、その変更をWBSやスコープ定義書に反映させるのが役割のひとつです。</li><li class=\"lii\"><span class=\"cite\">新機能を追加で開発するためのWBSのアクティビティの実行に必要なスキルを確認し，必要に応じてプロジェクトチームの能力向上を図る。</span>プロジェクト資源マネジメントの活動です。</li><li class=\"liu\"><span class=\"cite\">変更されたWBSに基づいてスケジュールを作成し，完了時期の見通しを提示する。</span>プロジェクトスケジュールマネジメントの活動です。</li><li class=\"lie\"><span class=\"cite\">変更されたWBSに基づいて要員の充足度を確認し，必要な場合は作業の外注を検討する。</span>プロジェクト資源マネジメントの活動です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "プロジェクトマネジメント",
      "プロジェクトマネジメント"
    ]
  },
  {
    "mondaibun": "ITガバナンスに関する次の記述中のaに入れる字句として，最も適切なものはどれか。経営者は，aの事業の目的を支援する観点で，効果的，効率的かつ受容可能なaのITの利用について評価する。",
    "kouho": "[]",
    "mondai": [
      "過去と現在",
      "現在",
      "現在と将来",
      "将来"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>ITガバナンス</strong>は、企業が競争優位性を構築するために、IT戦略の策定・実行をガイドし、あるべき方向へ導く統制活動であり、ITへの投資・効果・リスクを継続的に最適化するための組織的な仕組みです。ITガバナンスの標準化規格であるJIS Q 38500では「組織のITの<em class=\"r\">現在及び将来</em>の利用を指示し，管理するシステム。…組織におけるITの利用に関する戦略及び方針を含む」と定義しています。<br><br>ITガバナンスは組織の事業戦略と一体となって実行され、事業戦略を支援・強化するものでなければなりません。このため効果的なITガバナンスとするためには、現在と将来の組織の事業戦略を策定する際に、現在と将来のITの能力を考慮に入れる必要がありますし、ITの利用策について評価するときには、経営資源や事業戦略との整合性を考える必要があります。<br><br>JIS Q 38500では、ITガバナンスにおける経営者の役割として次の3つを掲げています。<ul><li>現在と将来のIT利用について評価する</li><li>IT利用の計画と方針を準備し、実施を指示する</li><li>方針への適合、計画の実績をモニタリングする</li></ul>したがって<span class=\"bb\">a</span>には「現在と将来」が当てはまります。</div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "内部統制"
    ]
  },
  {
    "mondaibun": "事業活動に関わる法令の遵守などを目的の一つとして，統制環境，リスクの評価と対応，統制活動，情報と伝達，モニタリング，ITへの対応から構成される取組はどれか。",
    "kouho": "[]",
    "mondai": [
      "CMMI",
      "ITIL",
      "内部統制",
      "リスク管理"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><ul><li class=\"lia\"><span class=\"cite\">CMMI</span>Capability Maturity Model Integrationの略で統合能力成熟度モデルのこと。組織におけるプロセス改善をガイドするモデルです。プロジェクト管理、プロセス管理、エンジニアリング、支援に関するプロセスについて、それらが効果的なプロセスであるために重要な要素をゴールとプラクティスという概念を用いて整理し、組織のプロセスの成熟度をレベル1～5の段階で定義したものです。</li><li class=\"lii\"><span class=\"cite\">ITIL</span>ITIL(アイティル)は、ITサービスを適切に運用管理するためのベストプラクティス(成功事例)を包括的にまとめたフレームワークです。ITサービスマネジメントの分野で広く支持され、業界標準のガイドライン的な位置付けになります。英国商務省によって作成・更新されています。</li><li class=\"liu\"><span class=\"cite\">内部統制</span><em class=\"m\">正しい回答</em>。<strong>内部統制</strong>は、組織内部のルールや手順を整備し、業務に組み込んで適切に運用することで、業務の有効性・効率性、財務報告の信頼性、法令遵守、資産の保全を確保する取組みをいいます。金融庁\"財務報告に係る内部統制の評価及び監査に関する実施基準(令和5年)\"では、内部統制の目的を達成するため必要とされる基本的な構成要素として、①統制環境、②リスクの評価と対応、③統制活動、④情報と伝達、⑤モニタリング、⑥ITへの対応、の6つを定めています。</li><li class=\"lie\"><span class=\"cite\">リスク管理</span>リスク管理は、組織体の活動に伴い発生するあらゆるリスクを、統合的に把握、評価し、最適化を図る手法です。リスク特定→リスク分析→リスク評価→リスク対応の一連の活動を含みます。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "内部統制"
    ]
  },
  {
    "mondaibun": "システム監査の目的に関する記述として，適切なものはどれか。",
    "kouho": "[]",
    "mondai": [
      "開発すべきシステムの具体的な用途を分析し，システム要件を明らかにすること",
      "情報システムが設置されている施設とその環境を総合的に企画，管理，活用すること",
      "情報システムに係るリスクに適切に対応しているかどうかを評価することによって，組織体の目標達成に寄与すること",
      "知識，スキル，ツール及び技法をプロジェクト活動に適用することによってプロジェクトの要求事項を満足させること"
    ],
    "mondaiimg": [],
    "kotae": "ウ",
    "kaisetu": "<div class=\"ansbg\" id=\"kaisetsu\"><strong>システム監査</strong>は、専門性と客観性を備えたシステム監査人が、情報システムのガバナンス、マネジメント、コントロールの適切性を総合的に点検・評価・検討するものです。情報システムにまつわるリスクを点検等することを通じて、次のような成果を得ることを目的とします。<ul><li>組織体の経営活動と業務活動の効果的かつ効率的な遂行に寄与すること</li><li>組織体の活動の変革を支援し、組織体の目標達成に寄与すること</li><li>利害関係者に対する説明責任を果たすこと</li></ul>情報システムが社会のインフラとなっている現代では、情報システムに係る各種のリスクが顕在化しており、このリスクにいかに対処するかは経営上の重要な要素となっています。システム監査は、これらのリスクに適切に対処すること、さらには組織体のITガバナンスに寄与することを目的として実施されます。<br><br>したがって「ウ」の記述が適切です。<ul><li class=\"lia\"><span class=\"cite\">開発すべきシステムの具体的な用途を分析し，システム要件を明らかにすること</span>システム要件定義の目的です。</li><li class=\"lii\"><span class=\"cite\">情報システムが設置されている施設とその環境を総合的に企画，管理，活用すること</span>ファシリティマネジメントの目的です。</li><li class=\"liu\"><span class=\"cite\">情報システムに係るリスクに適切に対応しているかどうかを評価することによって，組織体の目標達成に寄与すること</span><em class=\"m\">正しい回答</em>。システム監査の目的です。</li><li class=\"lie\"><span class=\"cite\">知識，スキル，ツール及び技法をプロジェクト活動に適用することによってプロジェクトの要求事項を満足させること</span>プロジェクトマネジメントの目的です。</li></ul></div>",
    "category": [
      "マネジメント系",
      "システム監査",
      "システム監査"
    ]
  }
]